'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _deck = require('deck.gl');

var _deck2 = _interopRequireDefault(_deck);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _nebula = require('./nebula');

var _nebula2 = _interopRequireDefault(_nebula);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
  canvasContainer: {
    pointerEvents: 'none',
    position: 'absolute',
    left: 0,
    right: 0,
    top: 0,
    bottom: 0
  }
};

var NebulaReact = function (_Component) {
  _inherits(NebulaReact, _Component);

  function NebulaReact() {
    _classCallCheck(this, NebulaReact);

    return _possibleConstructorReturn(this, (NebulaReact.__proto__ || Object.getPrototypeOf(NebulaReact)).apply(this, arguments));
  }

  _createClass(NebulaReact, [{
    key: 'getChildContext',
    value: function getChildContext() {
      var nebula = this.nebula;
      var viewport = nebula.props.viewport,
          wmViewport = nebula.wmViewport;

      return { viewport: viewport, wmViewport: wmViewport, nebula: nebula };
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _this2 = this;

      this.nebula = new _nebula2.default();
      this.nebula.init(this.props);
      this.nebula.forceUpdate = function () {
        return _this2.forceUpdate();
      };
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(props) {
      this.nebula.updateProps(props);
    }
  }, {
    key: 'updateAllDeckObjects',
    value: function updateAllDeckObjects() {
      this.nebula.updateAllDeckObjects();
    }
  }, {
    key: 'updateDeckObjectsByIds',
    value: function updateDeckObjectsByIds(ids) {
      this.nebula.updateDeckObjectsByIds(ids);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          viewport = _props.viewport,
          children = _props.children;
      var width = viewport.width,
          height = viewport.height;


      return _react2.default.createElement(
        'div',
        { style: styles.canvasContainer, ref: function ref(div) {
            return _this3.mainContainer = div;
          } },
        _react2.default.createElement(_deck2.default, {
          ref: function ref(deckgl) {
            return _this3.nebula.setDeck(deckgl);
          },
          width: width,
          height: height,
          viewports: [this.nebula.wmViewport],
          layers: this.nebula.getRenderedLayers()
        }),
        children
      );
    }
  }]);

  return NebulaReact;
}(_react.Component);

NebulaReact.childContextTypes = {
  viewport: _propTypes2.default.object,
  wmViewport: _propTypes2.default.object,
  nebula: _propTypes2.default.object
};
exports.default = NebulaReact;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvbmVidWxhLXJlYWN0LmpzIl0sIm5hbWVzIjpbInN0eWxlcyIsImNhbnZhc0NvbnRhaW5lciIsInBvaW50ZXJFdmVudHMiLCJwb3NpdGlvbiIsImxlZnQiLCJyaWdodCIsInRvcCIsImJvdHRvbSIsIk5lYnVsYVJlYWN0IiwibmVidWxhIiwidmlld3BvcnQiLCJwcm9wcyIsIndtVmlld3BvcnQiLCJpbml0IiwiZm9yY2VVcGRhdGUiLCJ1cGRhdGVQcm9wcyIsInVwZGF0ZUFsbERlY2tPYmplY3RzIiwiaWRzIiwidXBkYXRlRGVja09iamVjdHNCeUlkcyIsImNoaWxkcmVuIiwid2lkdGgiLCJoZWlnaHQiLCJtYWluQ29udGFpbmVyIiwiZGl2Iiwic2V0RGVjayIsImRlY2tnbCIsImdldFJlbmRlcmVkTGF5ZXJzIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJvYmplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBR0E7Ozs7Ozs7Ozs7OztBQVlBLElBQU1BLFNBQVM7QUFDYkMsbUJBQWlCO0FBQ2ZDLG1CQUFlLE1BREE7QUFFZkMsY0FBVSxVQUZLO0FBR2ZDLFVBQU0sQ0FIUztBQUlmQyxXQUFPLENBSlE7QUFLZkMsU0FBSyxDQUxVO0FBTWZDLFlBQVE7QUFOTztBQURKLENBQWY7O0lBV3FCQyxXOzs7Ozs7Ozs7OztzQ0FPRDtBQUFBLFVBQ1JDLE1BRFEsR0FDRyxJQURILENBQ1JBLE1BRFE7QUFBQSxVQUVDQyxRQUZELEdBRTRCRCxNQUY1QixDQUVSRSxLQUZRLENBRUNELFFBRkQ7QUFBQSxVQUVhRSxVQUZiLEdBRTRCSCxNQUY1QixDQUVhRyxVQUZiOztBQUdoQixhQUFPLEVBQUVGLGtCQUFGLEVBQVlFLHNCQUFaLEVBQXdCSCxjQUF4QixFQUFQO0FBQ0Q7Ozt5Q0FFb0I7QUFBQTs7QUFDbkIsV0FBS0EsTUFBTCxHQUFjLHNCQUFkO0FBQ0EsV0FBS0EsTUFBTCxDQUFZSSxJQUFaLENBQWlCLEtBQUtGLEtBQXRCO0FBQ0EsV0FBS0YsTUFBTCxDQUFZSyxXQUFaLEdBQTBCO0FBQUEsZUFBTSxPQUFLQSxXQUFMLEVBQU47QUFBQSxPQUExQjtBQUNEOzs7OENBRXlCSCxLLEVBQWM7QUFDdEMsV0FBS0YsTUFBTCxDQUFZTSxXQUFaLENBQXdCSixLQUF4QjtBQUNEOzs7MkNBS3NCO0FBQ3JCLFdBQUtGLE1BQUwsQ0FBWU8sb0JBQVo7QUFDRDs7OzJDQUVzQkMsRyxFQUFlO0FBQ3BDLFdBQUtSLE1BQUwsQ0FBWVMsc0JBQVosQ0FBbUNELEdBQW5DO0FBQ0Q7Ozs2QkFFUTtBQUFBOztBQUFBLG1CQUN3QixLQUFLTixLQUQ3QjtBQUFBLFVBQ0NELFFBREQsVUFDQ0EsUUFERDtBQUFBLFVBQ1dTLFFBRFgsVUFDV0EsUUFEWDtBQUFBLFVBRUNDLEtBRkQsR0FFbUJWLFFBRm5CLENBRUNVLEtBRkQ7QUFBQSxVQUVRQyxNQUZSLEdBRW1CWCxRQUZuQixDQUVRVyxNQUZSOzs7QUFJUCxhQUNFO0FBQUE7QUFBQSxVQUFLLE9BQU9yQixPQUFPQyxlQUFuQixFQUFvQyxLQUFLO0FBQUEsbUJBQVEsT0FBS3FCLGFBQUwsR0FBcUJDLEdBQTdCO0FBQUEsV0FBekM7QUFDRTtBQUNFLGVBQUs7QUFBQSxtQkFBVSxPQUFLZCxNQUFMLENBQVllLE9BQVosQ0FBb0JDLE1BQXBCLENBQVY7QUFBQSxXQURQO0FBRUUsaUJBQU9MLEtBRlQ7QUFHRSxrQkFBUUMsTUFIVjtBQUlFLHFCQUFXLENBQUMsS0FBS1osTUFBTCxDQUFZRyxVQUFiLENBSmI7QUFLRSxrQkFBUSxLQUFLSCxNQUFMLENBQVlpQixpQkFBWjtBQUxWLFVBREY7QUFRR1A7QUFSSCxPQURGO0FBWUQ7Ozs7OztBQWxEa0JYLFcsQ0FDWm1CLGlCLEdBQW9CO0FBQ3pCakIsWUFBVSxvQkFBVWtCLE1BREs7QUFFekJoQixjQUFZLG9CQUFVZ0IsTUFGRztBQUd6Qm5CLFVBQVEsb0JBQVVtQjtBQUhPLEM7a0JBRFJwQixXIiwiZmlsZSI6Im5lYnVsYS1yZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IERlY2tHTCBmcm9tICdkZWNrLmdsJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCB0eXBlIHsgVmlld3BvcnQgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgTmVidWxhIGZyb20gJy4vbmVidWxhJztcblxudHlwZSBQcm9wcyA9IHtcbiAgbGF5ZXJzOiBPYmplY3RbXSxcbiAgb25TZWxlY3Rpb24/OiAoc2VsZWN0ZWRGZWF0dXJlczogT2JqZWN0W10pID0+IHZvaWQsXG4gIHNlbGVjdGlvblR5cGU/OiBudW1iZXIsXG4gIG9uTWFwTW91c2VFdmVudD86IEZ1bmN0aW9uLFxuICB2aWV3cG9ydDogVmlld3BvcnQsXG4gIGxvZ2dlcj86IE9iamVjdCxcbiAgY2hpbGRyZW4/OiBhbnlcbn07XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgY2FudmFzQ29udGFpbmVyOiB7XG4gICAgcG9pbnRlckV2ZW50czogJ25vbmUnLFxuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIGxlZnQ6IDAsXG4gICAgcmlnaHQ6IDAsXG4gICAgdG9wOiAwLFxuICAgIGJvdHRvbTogMFxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZWJ1bGFSZWFjdCBleHRlbmRzIENvbXBvbmVudDxQcm9wcz4ge1xuICBzdGF0aWMgY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gICAgdmlld3BvcnQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgd21WaWV3cG9ydDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBuZWJ1bGE6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgY29uc3QgeyBuZWJ1bGEgfSA9IHRoaXM7XG4gICAgY29uc3QgeyBwcm9wczogeyB2aWV3cG9ydCB9LCB3bVZpZXdwb3J0IH0gPSBuZWJ1bGE7XG4gICAgcmV0dXJuIHsgdmlld3BvcnQsIHdtVmlld3BvcnQsIG5lYnVsYSB9O1xuICB9XG5cbiAgY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHRoaXMubmVidWxhID0gbmV3IE5lYnVsYSgpO1xuICAgIHRoaXMubmVidWxhLmluaXQodGhpcy5wcm9wcyk7XG4gICAgdGhpcy5uZWJ1bGEuZm9yY2VVcGRhdGUgPSAoKSA9PiB0aGlzLmZvcmNlVXBkYXRlKCk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKHByb3BzOiBQcm9wcykge1xuICAgIHRoaXMubmVidWxhLnVwZGF0ZVByb3BzKHByb3BzKTtcbiAgfVxuXG4gIG5lYnVsYTogTmVidWxhO1xuICBtYWluQ29udGFpbmVyOiA/T2JqZWN0O1xuXG4gIHVwZGF0ZUFsbERlY2tPYmplY3RzKCkge1xuICAgIHRoaXMubmVidWxhLnVwZGF0ZUFsbERlY2tPYmplY3RzKCk7XG4gIH1cblxuICB1cGRhdGVEZWNrT2JqZWN0c0J5SWRzKGlkczogc3RyaW5nW10pIHtcbiAgICB0aGlzLm5lYnVsYS51cGRhdGVEZWNrT2JqZWN0c0J5SWRzKGlkcyk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyB2aWV3cG9ydCwgY2hpbGRyZW4gfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0IH0gPSB2aWV3cG9ydDtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuY2FudmFzQ29udGFpbmVyfSByZWY9e2RpdiA9PiAodGhpcy5tYWluQ29udGFpbmVyID0gZGl2KX0+XG4gICAgICAgIDxEZWNrR0xcbiAgICAgICAgICByZWY9e2RlY2tnbCA9PiB0aGlzLm5lYnVsYS5zZXREZWNrKGRlY2tnbCl9XG4gICAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICAgIHZpZXdwb3J0cz17W3RoaXMubmVidWxhLndtVmlld3BvcnRdfVxuICAgICAgICAgIGxheWVycz17dGhpcy5uZWJ1bGEuZ2V0UmVuZGVyZWRMYXllcnMoKX1cbiAgICAgICAgLz5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIl19