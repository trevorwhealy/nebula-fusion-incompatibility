'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _nebulaOverlay = require('./nebula-overlay');

var _nebulaOverlay2 = _interopRequireDefault(_nebulaOverlay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
  mainContainer: {
    width: '100%',
    height: '100%',
    position: 'absolute',
    pointerEvents: 'none'
  }
};

var HtmlOverlay = function (_NebulaOverlay) {
  _inherits(HtmlOverlay, _NebulaOverlay);

  function HtmlOverlay() {
    _classCallCheck(this, HtmlOverlay);

    return _possibleConstructorReturn(this, (HtmlOverlay.__proto__ || Object.getPrototypeOf(HtmlOverlay)).apply(this, arguments));
  }

  _createClass(HtmlOverlay, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { parent: this };
    }

    // override this to provide your items

  }, {
    key: 'getItems',
    value: function getItems() {
      throw new Error('Please provide your own items');
    }
  }, {
    key: 'getCoords',
    value: function getCoords(coordinates) {
      var pos = this.context.wmViewport.project(coordinates);
      if (!pos) return [-1, -1];
      return pos;
    }
  }, {
    key: 'inView',
    value: function inView(_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          x = _ref2[0],
          y = _ref2[1];

      var _context$viewport = this.context.viewport,
          width = _context$viewport.width,
          height = _context$viewport.height;

      return !(x < 0 || y < 0 || x > width || y > height);
    }
  }, {
    key: 'scaleWithZoom',
    value: function scaleWithZoom(n) {
      var zoom = this.context.viewport.zoom;

      return n / Math.pow(2, 20 - zoom);
    }
  }, {
    key: 'breakpointWithZoom',
    value: function breakpointWithZoom(threshold, a, b) {
      var zoom = this.context.viewport.zoom;

      return zoom > threshold ? a : b;
    }
  }, {
    key: 'getViewport',
    value: function getViewport() {
      return this.context.viewport;
    }
  }, {
    key: 'getZoom',
    value: function getZoom() {
      return this.context.viewport.zoom;
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { style: styles.mainContainer },
        this.getItems()
      );
    }
  }]);

  return HtmlOverlay;
}(_nebulaOverlay2.default);

HtmlOverlay.childContextTypes = {
  parent: _propTypes2.default.object
};
exports.default = HtmlOverlay;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvb3ZlcmxheXMvaHRtbC1vdmVybGF5LmpzIl0sIm5hbWVzIjpbInN0eWxlcyIsIm1haW5Db250YWluZXIiLCJ3aWR0aCIsImhlaWdodCIsInBvc2l0aW9uIiwicG9pbnRlckV2ZW50cyIsIkh0bWxPdmVybGF5IiwicGFyZW50IiwiRXJyb3IiLCJjb29yZGluYXRlcyIsInBvcyIsImNvbnRleHQiLCJ3bVZpZXdwb3J0IiwicHJvamVjdCIsIngiLCJ5Iiwidmlld3BvcnQiLCJuIiwiem9vbSIsIk1hdGgiLCJwb3ciLCJ0aHJlc2hvbGQiLCJhIiwiYiIsImdldEl0ZW1zIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJvYmplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFNBQVM7QUFDYkMsaUJBQWU7QUFDYkMsV0FBTyxNQURNO0FBRWJDLFlBQVEsTUFGSztBQUdiQyxjQUFVLFVBSEc7QUFJYkMsbUJBQWU7QUFKRjtBQURGLENBQWY7O0lBU3FCQyxXOzs7Ozs7Ozs7OztzQ0FLRDtBQUNoQixhQUFPLEVBQUVDLFFBQVEsSUFBVixFQUFQO0FBQ0Q7O0FBRUQ7Ozs7K0JBQ3FCO0FBQ25CLFlBQU0sSUFBSUMsS0FBSixDQUFVLCtCQUFWLENBQU47QUFDRDs7OzhCQUVTQyxXLEVBQXlDO0FBQ2pELFVBQU1DLE1BQU0sS0FBS0MsT0FBTCxDQUFhQyxVQUFiLENBQXdCQyxPQUF4QixDQUFnQ0osV0FBaEMsQ0FBWjtBQUNBLFVBQUksQ0FBQ0MsR0FBTCxFQUFVLE9BQU8sQ0FBQyxDQUFDLENBQUYsRUFBSyxDQUFDLENBQU4sQ0FBUDtBQUNWLGFBQU9BLEdBQVA7QUFDRDs7O2lDQUVpQztBQUFBO0FBQUEsVUFBMUJJLENBQTBCO0FBQUEsVUFBdkJDLENBQXVCOztBQUFBLDhCQUNOLEtBQUtKLE9BQUwsQ0FBYUssUUFEUDtBQUFBLFVBQ3hCZCxLQUR3QixxQkFDeEJBLEtBRHdCO0FBQUEsVUFDakJDLE1BRGlCLHFCQUNqQkEsTUFEaUI7O0FBRWhDLGFBQU8sRUFBRVcsSUFBSSxDQUFKLElBQVNDLElBQUksQ0FBYixJQUFrQkQsSUFBSVosS0FBdEIsSUFBK0JhLElBQUlaLE1BQXJDLENBQVA7QUFDRDs7O2tDQUVhYyxDLEVBQVc7QUFBQSxVQUNmQyxJQURlLEdBQ04sS0FBS1AsT0FBTCxDQUFhSyxRQURQLENBQ2ZFLElBRGU7O0FBRXZCLGFBQU9ELElBQUlFLEtBQUtDLEdBQUwsQ0FBUyxDQUFULEVBQVksS0FBS0YsSUFBakIsQ0FBWDtBQUNEOzs7dUNBRWtCRyxTLEVBQW1CQyxDLEVBQVFDLEMsRUFBYTtBQUFBLFVBQ2pETCxJQURpRCxHQUN4QyxLQUFLUCxPQUFMLENBQWFLLFFBRDJCLENBQ2pERSxJQURpRDs7QUFFekQsYUFBT0EsT0FBT0csU0FBUCxHQUFtQkMsQ0FBbkIsR0FBdUJDLENBQTlCO0FBQ0Q7OztrQ0FFYTtBQUNaLGFBQU8sS0FBS1osT0FBTCxDQUFhSyxRQUFwQjtBQUNEOzs7OEJBRVM7QUFDUixhQUFPLEtBQUtMLE9BQUwsQ0FBYUssUUFBYixDQUFzQkUsSUFBN0I7QUFDRDs7OzZCQUVRO0FBQ1AsYUFBTztBQUFBO0FBQUEsVUFBSyxPQUFPbEIsT0FBT0MsYUFBbkI7QUFBbUMsYUFBS3VCLFFBQUw7QUFBbkMsT0FBUDtBQUNEOzs7Ozs7QUE3Q2tCbEIsVyxDQUNabUIsaUIsR0FBb0I7QUFDekJsQixVQUFRLG9CQUFVbUI7QUFETyxDO2tCQURScEIsVyIsImZpbGUiOiJodG1sLW92ZXJsYXkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgTmVidWxhT3ZlcmxheSBmcm9tICcuL25lYnVsYS1vdmVybGF5JztcblxuY29uc3Qgc3R5bGVzID0ge1xuICBtYWluQ29udGFpbmVyOiB7XG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICBwb2ludGVyRXZlbnRzOiAnbm9uZSdcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSHRtbE92ZXJsYXk8UHJvcHM+IGV4dGVuZHMgTmVidWxhT3ZlcmxheTxQcm9wcz4ge1xuICBzdGF0aWMgY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gICAgcGFyZW50OiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7IHBhcmVudDogdGhpcyB9O1xuICB9XG5cbiAgLy8gb3ZlcnJpZGUgdGhpcyB0byBwcm92aWRlIHlvdXIgaXRlbXNcbiAgZ2V0SXRlbXMoKTogQXJyYXk8Kj4ge1xuICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIHByb3ZpZGUgeW91ciBvd24gaXRlbXMnKTtcbiAgfVxuXG4gIGdldENvb3Jkcyhjb29yZGluYXRlczogbnVtYmVyW10pOiBbbnVtYmVyLCBudW1iZXJdIHtcbiAgICBjb25zdCBwb3MgPSB0aGlzLmNvbnRleHQud21WaWV3cG9ydC5wcm9qZWN0KGNvb3JkaW5hdGVzKTtcbiAgICBpZiAoIXBvcykgcmV0dXJuIFstMSwgLTFdO1xuICAgIHJldHVybiBwb3M7XG4gIH1cblxuICBpblZpZXcoW3gsIHldOiBudW1iZXJbXSk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gdGhpcy5jb250ZXh0LnZpZXdwb3J0O1xuICAgIHJldHVybiAhKHggPCAwIHx8IHkgPCAwIHx8IHggPiB3aWR0aCB8fCB5ID4gaGVpZ2h0KTtcbiAgfVxuXG4gIHNjYWxlV2l0aFpvb20objogbnVtYmVyKSB7XG4gICAgY29uc3QgeyB6b29tIH0gPSB0aGlzLmNvbnRleHQudmlld3BvcnQ7XG4gICAgcmV0dXJuIG4gLyBNYXRoLnBvdygyLCAyMCAtIHpvb20pO1xuICB9XG5cbiAgYnJlYWtwb2ludFdpdGhab29tKHRocmVzaG9sZDogbnVtYmVyLCBhOiBhbnksIGI6IGFueSk6IGFueSB7XG4gICAgY29uc3QgeyB6b29tIH0gPSB0aGlzLmNvbnRleHQudmlld3BvcnQ7XG4gICAgcmV0dXJuIHpvb20gPiB0aHJlc2hvbGQgPyBhIDogYjtcbiAgfVxuXG4gIGdldFZpZXdwb3J0KCkge1xuICAgIHJldHVybiB0aGlzLmNvbnRleHQudmlld3BvcnQ7XG4gIH1cblxuICBnZXRab29tKCkge1xuICAgIHJldHVybiB0aGlzLmNvbnRleHQudmlld3BvcnQuem9vbTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gPGRpdiBzdHlsZT17c3R5bGVzLm1haW5Db250YWluZXJ9Pnt0aGlzLmdldEl0ZW1zKCl9PC9kaXY+O1xuICB9XG59XG4iXX0=