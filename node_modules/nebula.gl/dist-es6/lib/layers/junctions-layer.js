'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _deck = require('deck.gl');

var _junctionScatterplotLayer = require('../deck-renderer/junction-scatterplot-layer');

var _junctionScatterplotLayer2 = _interopRequireDefault(_junctionScatterplotLayer);

var _nebulaLayer = require('../nebula-layer');

var _nebulaLayer2 = _interopRequireDefault(_nebulaLayer);

var _utils = require('../utils');

var _deckCache2 = require('../deck-renderer/deck-cache');

var _deckCache3 = _interopRequireDefault(_deckCache2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var JunctionsLayer = function (_NebulaLayer) {
  _inherits(JunctionsLayer, _NebulaLayer);

  function JunctionsLayer(config) {
    _classCallCheck(this, JunctionsLayer);

    var _this = _possibleConstructorReturn(this, (JunctionsLayer.__proto__ || Object.getPrototypeOf(JunctionsLayer)).call(this, config));

    _this.deckCache = new _deckCache3.default(config.getData, function (data) {
      return config.toNebulaFeature(data);
    });
    _this.enablePicking = true;
    return _this;
  }

  _createClass(JunctionsLayer, [{
    key: 'render',
    value: function render(_ref) {
      var nebula = _ref.nebula;

      var defaultColor = [0x0, 0x0, 0x0, 0xff];
      var _deckCache = this.deckCache,
          objects = _deckCache.objects,
          updateTrigger = _deckCache.updateTrigger;


      return new _junctionScatterplotLayer2.default({
        id: 'junctions-' + this.id,
        data: objects,
        opacity: 1,
        fp64: false,
        pickable: true,
        getPosition: function getPosition(nf) {
          return nebula.projector.coordsToLngLatOffset(nf.geoJson.geometry.coordinates);
        },
        getFillColor: function getFillColor(nf) {
          return (0, _utils.toDeckColor)(nf.style.fillColor) || defaultColor;
        },
        getStrokeColor: function getStrokeColor(nf) {
          return (0, _utils.toDeckColor)(nf.style.outlineColor) || (0, _utils.toDeckColor)(nf.style.fillColor) || defaultColor;
        },
        getRadius: function getRadius(nf) {
          return nf.style.pointRadiusMeters + nf.style.outlineRadiusMeters || 1;
        },
        getInnerRadius: function getInnerRadius(nf) {
          return nf.style.pointRadiusMeters || 0.5;
        },
        parameters: {
          depthTest: false,
          blend: false
        },

        coordinateSystem: _deck.COORDINATE_SYSTEM.LNGLAT_OFFSETS,
        coordinateOrigin: nebula.projector.lngLat,
        updateTriggers: { all: updateTrigger + '_' + nebula.projector.lngLat },

        nebulaLayer: this
      });
    }
  }]);

  return JunctionsLayer;
}(_nebulaLayer2.default);

exports.default = JunctionsLayer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvbGF5ZXJzL2p1bmN0aW9ucy1sYXllci5qcyJdLCJuYW1lcyI6WyJKdW5jdGlvbnNMYXllciIsImNvbmZpZyIsImRlY2tDYWNoZSIsImdldERhdGEiLCJ0b05lYnVsYUZlYXR1cmUiLCJkYXRhIiwiZW5hYmxlUGlja2luZyIsIm5lYnVsYSIsImRlZmF1bHRDb2xvciIsIm9iamVjdHMiLCJ1cGRhdGVUcmlnZ2VyIiwiaWQiLCJvcGFjaXR5IiwiZnA2NCIsInBpY2thYmxlIiwiZ2V0UG9zaXRpb24iLCJwcm9qZWN0b3IiLCJjb29yZHNUb0xuZ0xhdE9mZnNldCIsIm5mIiwiZ2VvSnNvbiIsImdlb21ldHJ5IiwiY29vcmRpbmF0ZXMiLCJnZXRGaWxsQ29sb3IiLCJzdHlsZSIsImZpbGxDb2xvciIsImdldFN0cm9rZUNvbG9yIiwib3V0bGluZUNvbG9yIiwiZ2V0UmFkaXVzIiwicG9pbnRSYWRpdXNNZXRlcnMiLCJvdXRsaW5lUmFkaXVzTWV0ZXJzIiwiZ2V0SW5uZXJSYWRpdXMiLCJwYXJhbWV0ZXJzIiwiZGVwdGhUZXN0IiwiYmxlbmQiLCJjb29yZGluYXRlU3lzdGVtIiwiTE5HTEFUX09GRlNFVFMiLCJjb29yZGluYXRlT3JpZ2luIiwibG5nTGF0IiwidXBkYXRlVHJpZ2dlcnMiLCJhbGwiLCJuZWJ1bGFMYXllciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDQTs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7OztJQUVxQkEsYzs7O0FBR25CLDBCQUFZQyxNQUFaLEVBQTRCO0FBQUE7O0FBQUEsZ0lBQ3BCQSxNQURvQjs7QUFFMUIsVUFBS0MsU0FBTCxHQUFpQix3QkFBY0QsT0FBT0UsT0FBckIsRUFBOEI7QUFBQSxhQUFRRixPQUFPRyxlQUFQLENBQXVCQyxJQUF2QixDQUFSO0FBQUEsS0FBOUIsQ0FBakI7QUFDQSxVQUFLQyxhQUFMLEdBQXFCLElBQXJCO0FBSDBCO0FBSTNCOzs7O2lDQUUwQjtBQUFBLFVBQWxCQyxNQUFrQixRQUFsQkEsTUFBa0I7O0FBQ3pCLFVBQU1DLGVBQWUsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsRUFBZ0IsSUFBaEIsQ0FBckI7QUFEeUIsdUJBRVUsS0FBS04sU0FGZjtBQUFBLFVBRWpCTyxPQUZpQixjQUVqQkEsT0FGaUI7QUFBQSxVQUVSQyxhQUZRLGNBRVJBLGFBRlE7OztBQUl6QixhQUFPLHVDQUE2QjtBQUNsQ0MsMkJBQWlCLEtBQUtBLEVBRFk7QUFFbENOLGNBQU1JLE9BRjRCO0FBR2xDRyxpQkFBUyxDQUh5QjtBQUlsQ0MsY0FBTSxLQUo0QjtBQUtsQ0Msa0JBQVUsSUFMd0I7QUFNbENDLHFCQUFhO0FBQUEsaUJBQU1SLE9BQU9TLFNBQVAsQ0FBaUJDLG9CQUFqQixDQUFzQ0MsR0FBR0MsT0FBSCxDQUFXQyxRQUFYLENBQW9CQyxXQUExRCxDQUFOO0FBQUEsU0FOcUI7QUFPbENDLHNCQUFjO0FBQUEsaUJBQU0sd0JBQVlKLEdBQUdLLEtBQUgsQ0FBU0MsU0FBckIsS0FBbUNoQixZQUF6QztBQUFBLFNBUG9CO0FBUWxDaUIsd0JBQWdCO0FBQUEsaUJBQ2Qsd0JBQVlQLEdBQUdLLEtBQUgsQ0FBU0csWUFBckIsS0FBc0Msd0JBQVlSLEdBQUdLLEtBQUgsQ0FBU0MsU0FBckIsQ0FBdEMsSUFBeUVoQixZQUQzRDtBQUFBLFNBUmtCO0FBVWxDbUIsbUJBQVc7QUFBQSxpQkFBTVQsR0FBR0ssS0FBSCxDQUFTSyxpQkFBVCxHQUE2QlYsR0FBR0ssS0FBSCxDQUFTTSxtQkFBdEMsSUFBNkQsQ0FBbkU7QUFBQSxTQVZ1QjtBQVdsQ0Msd0JBQWdCO0FBQUEsaUJBQU1aLEdBQUdLLEtBQUgsQ0FBU0ssaUJBQVQsSUFBOEIsR0FBcEM7QUFBQSxTQVhrQjtBQVlsQ0csb0JBQVk7QUFDVkMscUJBQVcsS0FERDtBQUVWQyxpQkFBTztBQUZHLFNBWnNCOztBQWlCbENDLDBCQUFrQix3QkFBa0JDLGNBakJGO0FBa0JsQ0MsMEJBQWtCN0IsT0FBT1MsU0FBUCxDQUFpQnFCLE1BbEJEO0FBbUJsQ0Msd0JBQWdCLEVBQUVDLEtBQVE3QixhQUFSLFNBQXlCSCxPQUFPUyxTQUFQLENBQWlCcUIsTUFBNUMsRUFuQmtCOztBQXFCbENHLHFCQUFhO0FBckJxQixPQUE3QixDQUFQO0FBdUJEOzs7Ozs7a0JBcENrQnhDLGMiLCJmaWxlIjoianVuY3Rpb25zLWxheWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcbmltcG9ydCB7IENPT1JESU5BVEVfU1lTVEVNIH0gZnJvbSAnZGVjay5nbCc7XG5cbmltcG9ydCBKdW5jdGlvblNjYXR0ZXJwbG90TGF5ZXIgZnJvbSAnLi4vZGVjay1yZW5kZXJlci9qdW5jdGlvbi1zY2F0dGVycGxvdC1sYXllcic7XG5pbXBvcnQgTmVidWxhTGF5ZXIgZnJvbSAnLi4vbmVidWxhLWxheWVyJztcbmltcG9ydCB7IHRvRGVja0NvbG9yIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IERlY2tDYWNoZSBmcm9tICcuLi9kZWNrLXJlbmRlcmVyL2RlY2stY2FjaGUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBKdW5jdGlvbnNMYXllciBleHRlbmRzIE5lYnVsYUxheWVyIHtcbiAgZGVja0NhY2hlOiBEZWNrQ2FjaGU8KiwgKj47XG5cbiAgY29uc3RydWN0b3IoY29uZmlnOiBPYmplY3QpIHtcbiAgICBzdXBlcihjb25maWcpO1xuICAgIHRoaXMuZGVja0NhY2hlID0gbmV3IERlY2tDYWNoZShjb25maWcuZ2V0RGF0YSwgZGF0YSA9PiBjb25maWcudG9OZWJ1bGFGZWF0dXJlKGRhdGEpKTtcbiAgICB0aGlzLmVuYWJsZVBpY2tpbmcgPSB0cnVlO1xuICB9XG5cbiAgcmVuZGVyKHsgbmVidWxhIH06IE9iamVjdCkge1xuICAgIGNvbnN0IGRlZmF1bHRDb2xvciA9IFsweDAsIDB4MCwgMHgwLCAweGZmXTtcbiAgICBjb25zdCB7IG9iamVjdHMsIHVwZGF0ZVRyaWdnZXIgfSA9IHRoaXMuZGVja0NhY2hlO1xuXG4gICAgcmV0dXJuIG5ldyBKdW5jdGlvblNjYXR0ZXJwbG90TGF5ZXIoe1xuICAgICAgaWQ6IGBqdW5jdGlvbnMtJHt0aGlzLmlkfWAsXG4gICAgICBkYXRhOiBvYmplY3RzLFxuICAgICAgb3BhY2l0eTogMSxcbiAgICAgIGZwNjQ6IGZhbHNlLFxuICAgICAgcGlja2FibGU6IHRydWUsXG4gICAgICBnZXRQb3NpdGlvbjogbmYgPT4gbmVidWxhLnByb2plY3Rvci5jb29yZHNUb0xuZ0xhdE9mZnNldChuZi5nZW9Kc29uLmdlb21ldHJ5LmNvb3JkaW5hdGVzKSxcbiAgICAgIGdldEZpbGxDb2xvcjogbmYgPT4gdG9EZWNrQ29sb3IobmYuc3R5bGUuZmlsbENvbG9yKSB8fCBkZWZhdWx0Q29sb3IsXG4gICAgICBnZXRTdHJva2VDb2xvcjogbmYgPT5cbiAgICAgICAgdG9EZWNrQ29sb3IobmYuc3R5bGUub3V0bGluZUNvbG9yKSB8fCB0b0RlY2tDb2xvcihuZi5zdHlsZS5maWxsQ29sb3IpIHx8IGRlZmF1bHRDb2xvcixcbiAgICAgIGdldFJhZGl1czogbmYgPT4gbmYuc3R5bGUucG9pbnRSYWRpdXNNZXRlcnMgKyBuZi5zdHlsZS5vdXRsaW5lUmFkaXVzTWV0ZXJzIHx8IDEsXG4gICAgICBnZXRJbm5lclJhZGl1czogbmYgPT4gbmYuc3R5bGUucG9pbnRSYWRpdXNNZXRlcnMgfHwgMC41LFxuICAgICAgcGFyYW1ldGVyczoge1xuICAgICAgICBkZXB0aFRlc3Q6IGZhbHNlLFxuICAgICAgICBibGVuZDogZmFsc2VcbiAgICAgIH0sXG5cbiAgICAgIGNvb3JkaW5hdGVTeXN0ZW06IENPT1JESU5BVEVfU1lTVEVNLkxOR0xBVF9PRkZTRVRTLFxuICAgICAgY29vcmRpbmF0ZU9yaWdpbjogbmVidWxhLnByb2plY3Rvci5sbmdMYXQsXG4gICAgICB1cGRhdGVUcmlnZ2VyczogeyBhbGw6IGAke3VwZGF0ZVRyaWdnZXJ9XyR7bmVidWxhLnByb2plY3Rvci5sbmdMYXR9YCB9LFxuXG4gICAgICBuZWJ1bGFMYXllcjogdGhpc1xuICAgIH0pO1xuICB9XG59XG4iXX0=