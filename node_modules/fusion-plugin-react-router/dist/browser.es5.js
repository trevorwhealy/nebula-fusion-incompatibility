'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var PropTypes = _interopDefault(require('prop-types'));
var browser = require('react-router-dom');
var fusionPluginUniversalEvents = require('fusion-plugin-universal-events');
var fusionCore = require('fusion-core');
var createBrowserHistory = _interopDefault(require('history/createBrowserHistory'));

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
var Status =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Status, _React$Component);

  function Status(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var staticContext = context.router.staticContext;

    if (staticContext && staticContext.setCode) {
      staticContext.setCode(parseInt(_this.props.code, 10));
    }

    return _this;
  }

  var _proto = Status.prototype;

  _proto.render = function render() {
    var children = this.props && this.props.children;
    return Array.isArray(children) ? children[0] : children;
  };

  return Status;
}(React__default.Component);
Status.contextTypes = {
  router: PropTypes.shape({
    staticContext: PropTypes.object
  })
};
var NotFound = function NotFound(props) {
  return React__default.createElement(Status, {
    code: 404
  }, props.children);
};

function _inheritsLoose$1(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
var Redirect =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose$1(Redirect, _React$Component);

  function Redirect(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    if (_this.isStatic(context)) _this.perform();
    return _this;
  }

  var _proto = Redirect.prototype;

  _proto.componentDidMount = function componentDidMount() {
    if (!this.isStatic()) this.perform();
  };

  _proto.isStatic = function isStatic(context) {
    if (context === void 0) {
      context = this.context;
    }

    return context.router && context.router.staticContext;
  };

  _proto.perform = function perform() {
    var _this$context$router = this.context.router,
        history = _this$context$router.history,
        staticContext = _this$context$router.staticContext;
    var _this$props = this.props,
        push = _this$props.push,
        to = _this$props.to,
        code = _this$props.code;

    if (push) {
      history.push(to);
    } else {
      history.replace(to);
    }
  };

  _proto.render = function render() {
    return null;
  };

  return Redirect;
}(React__default.Component); // $FlowFixMe

Redirect.defaultProps = {
  push: false,
  code: 307
};
Redirect.contextTypes = {
  router: PropTypes.shape({
    history: PropTypes.shape({
      push: PropTypes.func.isRequired,
      replace: PropTypes.func.isRequired
    }).isRequired,
    staticContext: PropTypes.object
  }).isRequired
};

function _inheritsLoose$2(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */

var ServerRouter =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose$2(ServerRouter, _React$Component);

  function ServerRouter() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = ServerRouter.prototype;

  _proto.getChildContext = function getChildContext() {
    var _this = this;

    return {
      router: {
        staticContext: this.props.context || {}
      },
      onRoute: function onRoute(routeData) {
        return _this.props.onRoute(routeData);
      }
    };
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Provider = _this$props.Provider,
        history = _this$props.history,
        basename = _this$props.basename,
        children = _this$props.children;
    return React__default.createElement(Provider, {
      basename: basename,
      history: history
    }, children);
  };

  return ServerRouter;
}(React__default.Component); // $FlowFixMe

ServerRouter.defaultProps = {
  basename: '',
  context: {},
  Provider: browser.Router,
  onRoute: function onRoute() {}
};
ServerRouter.childContextTypes = {
  router: function router() {},
  onRoute: function onRoute() {}
};

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
var isEmptyChildren = function isEmptyChildren(children) {
  return React__default.Children.count(children) === 0;
};

function Route(props, context) {
  var trackingId = props.trackingId,
      component = props.component,
      render = props.render,
      _children = props.children,
      remainingProps = _objectWithoutProperties(props, ["trackingId", "component", "render", "children"]);

  return React__default.createElement(browser.Route, _extends({}, remainingProps, {
    // eslint-disable-next-line react/no-children-prop
    children: function children(routeProps) {
      var match = routeProps.match;

      if (match && match.isExact) {
        context.onRoute({
          page: match.path,
          title: trackingId || match.path
        });
      }

      if (component) return match ? React__default.createElement(component, routeProps) : null;
      if (render) return match ? render(routeProps) : null;
      if (typeof _children === 'function') return _children(routeProps);
      if (_children && !isEmptyChildren(_children)) return React__default.Children.only(_children);
      return null;
    }
  }));
}

Route.contextTypes = {
  onRoute: PropTypes.func.isRequired
};
Route.displayName = 'FusionRoute';

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function _inheritsLoose$3(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
var BrowserRouter =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose$3(BrowserRouter, _React$Component);

  function BrowserRouter(props, context) {
    var _this;

    if (props === void 0) {
      props = {};
    }

    _this = _React$Component.call(this, props, context) || this;
    _this.lastTitle = null;
    return _this;
  }

  var _proto = BrowserRouter.prototype;

  _proto.getChildContext = function getChildContext() {
    var _this2 = this;

    var __IS_PREPARE__ = this.context.__IS_PREPARE__;
    return {
      onRoute: function onRoute(routeData) {
        if (routeData.title !== _this2.lastTitle && !__IS_PREPARE__) {
          _this2.lastTitle = routeData.title;

          _this2.props.onRoute(routeData);
        }
      }
    };
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Provider = _this$props.Provider,
        history = _this$props.history,
        basename = _this$props.basename;
    return React__default.createElement(Provider, {
      basename: basename,
      history: history
    }, this.props.children);
  };

  return BrowserRouter;
}(React__default.Component);

BrowserRouter.propTypes = {
  children: PropTypes.node,
  onRoute: PropTypes.func,
  history: PropTypes.object,
  Provider: PropTypes.any,
  basename: PropTypes.string
};
BrowserRouter.contextTypes = {
  __IS_PREPARE__: PropTypes.bool
};
BrowserRouter.childContextTypes = {
  onRoute: PropTypes.func.isRequired
}; // $FlowFixMe

BrowserRouter.defaultProps = {
  onRoute: function onRoute() {},
  Provider: browser.Router
};

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

var _templateObject = /*#__PURE__*/ _taggedTemplateLiteralLoose(["<script id=\"__ROUTER_DATA__\" type=\"application/json\">", "</script>"], ["<script id=\"__ROUTER_DATA__\" type=\"application/json\">", "</script>"]);

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
var RouterProviderToken = fusionCore.createToken('RouterProvider');
var RouterToken = fusionCore.createToken('Router');
var Router$$1 = BrowserRouter;
var plugin = fusionCore.createPlugin({
  deps: {
    emitter: fusionPluginUniversalEvents.UniversalEventsToken.optional,
    Provider: RouterProviderToken.optional
  },
  middleware: function middleware(_ref, self) {
    var emitter = _ref.emitter,
        _ref$Provider = _ref.Provider,
        Provider = _ref$Provider === void 0 ? browser.Router : _ref$Provider;
    return function (ctx, next) {
      return new Promise(function ($return, $error) {
        var prefix = ctx.prefix || '';

        if (!ctx.element) {
          return $return(next());
        }

        var myAPI = self.from(ctx);

        {
          // TODO(#3): We should consider adding render/downstream/upstream timings for the browser
          var _pageData = {};
          var element = document.getElementById('__ROUTER_DATA__');

          if (element) {
            _pageData = JSON.parse(fusionCore.unescape(element.textContent));
          }

          emitter && emitter.map(function (payload) {
            if (payload && _typeof(payload) === 'object') {
              payload.__url__ = _pageData.title;
            }

            return payload;
          }); // Expose the history object

          var _history = createBrowserHistory({
            basename: ctx.prefix
          });

          myAPI.history = _history;
          ctx.element = React.createElement(Router$$1, {
            history: _history,
            Provider: Provider,
            basename: ctx.prefix,
            onRoute: function onRoute(payload) {
              _pageData = payload;
              emitter && emitter.emit('pageview:browser', payload);
            }
          }, ctx.element);
          return $return(next());
        }

        return $return();
      });
    };
  },
  provides: function provides() {
    return {
      from: fusionCore.memoize(function () {
        var api = {
          history: null
        };
        return api;
      })
    };
  }
});

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
var BrowserRouter$1 = browser.BrowserRouter;
var HashRouter = browser.HashRouter;
var Link = browser.Link;
var matchPath = browser.matchPath;
var MemoryRouter = browser.MemoryRouter;
var NavLink = browser.NavLink;
var Prompt = browser.Prompt;
var Route$1 = Route;
var Router$1 = BrowserRouter;
var Switch = browser.Switch;
var withRouter = browser.withRouter;
var NotFound$1 = NotFound;
var Redirect$1 = Redirect;
var Status$1 = Status;

exports.default = plugin;
exports.BrowserRouter = BrowserRouter$1;
exports.HashRouter = HashRouter;
exports.Link = Link;
exports.matchPath = matchPath;
exports.MemoryRouter = MemoryRouter;
exports.NavLink = NavLink;
exports.NotFound = NotFound$1;
exports.Prompt = Prompt;
exports.Redirect = Redirect$1;
exports.Route = Route$1;
exports.Router = Router$1;
exports.Status = Status$1;
exports.Switch = Switch;
exports.withRouter = withRouter;
exports.RouterProviderToken = RouterProviderToken;
exports.RouterToken = RouterToken;
//# sourceMappingURL=browser.es5.js.map
