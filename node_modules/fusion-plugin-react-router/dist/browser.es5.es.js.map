{"version":3,"file":"browser.es5.es.js","sources":["../src/modules/Status.js","../src/modules/Redirect.js","../src/modules/ServerRouter.js","../src/modules/Route.js","../src/server.js","../src/modules/BrowserRouter.js","../src/browser.js","../src/modules/ServerHistory.js","../src/plugin.js","../src/index.js"],"sourcesContent":["/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Status extends React.Component<any> {\n  constructor(props: any, context: any) {\n    super(props, context);\n    const {\n      router: {staticContext},\n    } = context;\n    if (staticContext && staticContext.setCode) {\n      staticContext.setCode(parseInt(this.props.code, 10));\n    }\n  }\n\n  render() {\n    const children = this.props && this.props.children;\n    return Array.isArray(children) ? children[0] : children;\n  }\n}\n\nStatus.contextTypes = {\n  router: PropTypes.shape({\n    staticContext: PropTypes.object,\n  }),\n};\n\nexport const NotFound = (props: any) => (\n  <Status code={404}>{props.children}</Status>\n);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Redirect extends React.Component<any> {\n  constructor(props: any, context: any) {\n    super(props, context);\n    if (this.isStatic(context)) this.perform();\n  }\n\n  componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  }\n\n  isStatic(context: any = this.context) {\n    return context.router && context.router.staticContext;\n  }\n\n  perform() {\n    const {history, staticContext} = this.context.router;\n    const {push, to, code} = this.props;\n\n    if (__NODE__ && staticContext) {\n      staticContext.setCode(parseInt(code, 10));\n      staticContext.redirect(to);\n      return;\n    }\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\n// $FlowFixMe\nRedirect.defaultProps = {\n  push: false,\n  code: 307,\n};\n\nRedirect.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n    }).isRequired,\n    staticContext: PropTypes.object,\n  }).isRequired,\n};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React from 'react';\nimport {Router} from 'react-router-dom';\n\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\nexport class ServerRouter extends React.Component<any> {\n  getChildContext() {\n    return {\n      router: {\n        staticContext: this.props.context || {},\n      },\n      onRoute: (routeData: any) => this.props.onRoute(routeData),\n    };\n  }\n\n  render() {\n    const {Provider, history, basename, children} = this.props;\n    return (\n      <Provider basename={basename} history={history}>\n        {children}\n      </Provider>\n    );\n  }\n}\n\n// $FlowFixMe\nServerRouter.defaultProps = {\n  basename: '',\n  context: {},\n  Provider: Router,\n  onRoute: () => {},\n};\n\nServerRouter.childContextTypes = {\n  router: () => {},\n  onRoute: () => {},\n};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route as ReactRouterRoute} from 'react-router-dom';\n\nconst isEmptyChildren = children => React.Children.count(children) === 0;\n\nfunction Route(props: any, context: any) {\n  const {trackingId, component, render, children, ...remainingProps} = props;\n\n  return (\n    <ReactRouterRoute\n      {...remainingProps}\n      // eslint-disable-next-line react/no-children-prop\n      children={routeProps => {\n        const {match} = routeProps;\n        if (match && match.isExact) {\n          context.onRoute({\n            page: match.path,\n            title: trackingId || match.path,\n          });\n        }\n\n        if (component)\n          return match ? React.createElement(component, routeProps) : null;\n\n        if (render) return match ? render(routeProps) : null;\n\n        if (typeof children === 'function') return children(routeProps);\n\n        if (children && !isEmptyChildren(children))\n          return React.Children.only(children);\n\n        return null;\n      }}\n    />\n  );\n}\n\nRoute.contextTypes = {\n  onRoute: PropTypes.func.isRequired,\n};\n\nRoute.displayName = 'FusionRoute';\n\nexport {Route};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  BrowserRouter,\n  HashRouter,\n  Link,\n  MemoryRouter,\n  NavLink,\n  Prompt,\n  Router as _Router,\n  Switch,\n  matchPath,\n  withRouter,\n} from 'react-router-dom';\n\nimport {Status, NotFound} from './modules/Status';\nimport {Redirect} from './modules/Redirect';\nimport {ServerRouter as Router} from './modules/ServerRouter';\nimport {Route} from './modules/Route';\n\nexport {\n  BrowserRouter,\n  HashRouter,\n  Link,\n  MemoryRouter,\n  NavLink,\n  Prompt,\n  _Router,\n  Switch,\n  matchPath,\n  withRouter,\n  Status,\n  NotFound,\n  Redirect,\n  Router,\n  Route,\n};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Router as BaseRouter} from 'react-router-dom';\n\nexport {Status, NotFound} from './Status';\nexport {Redirect} from './Redirect';\n\nclass BrowserRouter extends React.Component<any> {\n  lastTitle: any;\n\n  constructor(props: any = {}, context: any) {\n    super(props, context);\n    this.lastTitle = null;\n  }\n\n  getChildContext() {\n    const {__IS_PREPARE__} = this.context;\n    return {\n      onRoute: (routeData: any) => {\n        if (routeData.title !== this.lastTitle && !__IS_PREPARE__) {\n          this.lastTitle = routeData.title;\n          this.props.onRoute(routeData);\n        }\n      },\n    };\n  }\n\n  render() {\n    const {Provider, history, basename} = this.props;\n    return (\n      <Provider basename={basename} history={history}>\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nBrowserRouter.propTypes = {\n  children: PropTypes.node,\n  onRoute: PropTypes.func,\n  history: PropTypes.object,\n  Provider: PropTypes.any,\n  basename: PropTypes.string,\n};\n\nBrowserRouter.contextTypes = {\n  __IS_PREPARE__: PropTypes.bool,\n};\n\nBrowserRouter.childContextTypes = {\n  onRoute: PropTypes.func.isRequired,\n};\n\n// $FlowFixMe\nBrowserRouter.defaultProps = {\n  onRoute: () => {},\n  Provider: BaseRouter,\n};\n\nexport {BrowserRouter as Router};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  BrowserRouter,\n  HashRouter,\n  Link,\n  MemoryRouter,\n  NavLink,\n  Prompt,\n  StaticRouter,\n  Switch,\n  matchPath,\n  withRouter,\n} from 'react-router-dom';\n\nimport {Status, NotFound} from './modules/Status';\nimport {Redirect} from './modules/Redirect';\nimport {Router} from './modules/BrowserRouter';\nimport {Route} from './modules/Route';\n\nexport {\n  BrowserRouter,\n  HashRouter,\n  Link,\n  MemoryRouter,\n  NavLink,\n  Prompt,\n  StaticRouter,\n  Switch,\n  matchPath,\n  withRouter,\n  Status,\n  NotFound,\n  Redirect,\n  Router,\n  Route,\n};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport {createPath, parsePath} from 'history';\nimport type {HistoryType, LocationType} from '../types';\n\nconst addLeadingSlash = path => (path.charAt(0) === '/' ? path : '/' + path);\n\nconst addRoutePrefix = (\n  location: string | LocationType,\n  prefix: string\n): string | LocationType => {\n  if (!prefix) return location;\n  if (typeof location === 'string') {\n    return `${prefix}${addLeadingSlash(location)}`;\n  } else {\n    return {\n      ...location,\n      pathname: `${prefix}${addLeadingSlash(location.pathname)}`,\n    };\n  }\n};\n\nconst removeRoutePrefix = (\n  location: string | LocationType,\n  prefix: string\n): string | LocationType => {\n  if (!prefix) return location;\n  const pathname = typeof location === 'string' ? location : location.pathname;\n  const hasPrefix = (pathname + '/').indexOf(prefix + '/') === 0;\n  const unprefixedPathname = pathname.slice(prefix.length);\n  const relativePathname = hasPrefix ? unprefixedPathname : pathname;\n\n  if (typeof location === 'string') {\n    return relativePathname;\n  } else {\n    return {\n      ...location,\n      pathname: relativePathname,\n    };\n  }\n};\n\nconst createLocation = (\n  path: string | LocationType,\n  prefix: string\n): LocationType => {\n  const unprefixedPath = removeRoutePrefix(path, prefix);\n  return parsePath(unprefixedPath);\n};\n\nconst createPrefixedURL = (\n  location: string | LocationType,\n  prefix: string\n): string | LocationType => {\n  if (typeof location === 'string') {\n    return addRoutePrefix(location, prefix);\n  } else {\n    return createPath(addRoutePrefix(location, prefix));\n  }\n};\n\n/**\n * @param {string|object} location\n * @param {string} prefix\n * @returns {string}\n */\nconst createURL = (location, prefix) => {\n  if (typeof location === 'string') {\n    return removeRoutePrefix(location, prefix);\n  } else {\n    return createPath(removeRoutePrefix(location, prefix));\n  }\n};\n\nconst staticHandler = methodName => () => {\n  throw new Error(`You cannot ${methodName} with server side <Router>`);\n};\n\nconst noop = () => {};\n\ntype ContextType = {\n  action: ?string,\n  location: any,\n  url: ?string,\n};\n\nexport function createServerHistory(\n  basename: string,\n  context: ContextType,\n  location: string | LocationType\n): HistoryType {\n  function createHref(location: string | LocationType): string | LocationType {\n    return createPrefixedURL(location, basename);\n  }\n  function push(path: string) {\n    context.action = 'PUSH';\n    context.location = createLocation(path, basename);\n    // $FlowFixMe\n    context.url = createURL(path, basename);\n  }\n\n  function replace(path: string) {\n    context.action = 'REPLACE';\n    context.location = createLocation(path, basename);\n    // $FlowFixMe\n    context.url = createURL(path, basename);\n  }\n  const history = {\n    length: 0,\n    createHref,\n    action: 'POP',\n    location: createLocation(location, basename),\n    push,\n    replace,\n    go: staticHandler('go'),\n    goBack: staticHandler('back'),\n    goForward: staticHandler('forward'),\n    listen: () => noop,\n  };\n  return history;\n}\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport {UniversalEventsToken} from 'fusion-plugin-universal-events';\nimport {createPlugin, createToken, html, unescape, memoize} from 'fusion-core';\nimport {Router as ServerRouter} from './server';\nimport {Router as BrowserRouter} from './browser';\nimport {Router as DefaultProvider} from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport {createServerHistory} from './modules/ServerHistory';\nimport type {HistoryType} from './types';\nimport type {Token, Context} from 'fusion-core';\n\ntype ProviderPropsType = {\n  history: HistoryType,\n  basename: string,\n};\ntype HistoryWrapperType = {\n  from: (\n    ctx: Context\n  ) => {\n    history: HistoryType,\n  },\n};\n\nexport const RouterProviderToken: Token<\n  React.ComponentType<ProviderPropsType>\n> = createToken('RouterProvider');\n\nexport const RouterToken: Token<HistoryWrapperType> = createToken('Router');\n\nconst Router = __NODE__ ? ServerRouter : BrowserRouter;\n\nexport default createPlugin({\n  deps: {\n    emitter: UniversalEventsToken.optional,\n    Provider: RouterProviderToken.optional,\n  },\n  middleware: ({emitter, Provider = DefaultProvider}, self) => {\n    return async (ctx, next) => {\n      const prefix = ctx.prefix || '';\n      if (!ctx.element) {\n        return next();\n      }\n      const myAPI = self.from(ctx);\n      if (__NODE__) {\n        let pageData = {\n          title: ctx.path,\n          page: ctx.path,\n        };\n        const context = {\n          action: null,\n          location: null,\n          url: null,\n          setCode: code => {\n            ctx.status = code;\n          },\n          redirect: url => {\n            ctx.redirect(url);\n          },\n        };\n        // Expose the history object\n        const history = createServerHistory(prefix, context, prefix + ctx.url);\n        myAPI.history = history;\n        ctx.element = (\n          <Router\n            history={history}\n            Provider={Provider}\n            onRoute={d => {\n              pageData = d;\n            }}\n            basename={prefix}\n            context={context}\n          >\n            {ctx.element}\n          </Router>\n        );\n        return next().then(() => {\n          ctx.template.body.push(\n            html`<script id=\"__ROUTER_DATA__\" type=\"application/json\">${JSON.stringify(\n              pageData\n            )}</script>`\n          );\n\n          if (emitter) {\n            const emitTiming = type => timing => {\n              emitter.emit(type, {\n                title: pageData.title,\n                page: pageData.page,\n                status: ctx.status,\n                timing,\n              });\n            };\n            emitter.from(ctx).map(payload => {\n              if (payload && typeof payload === 'object') {\n                payload.__url__ = pageData.title;\n              }\n              return payload;\n            });\n            ctx.timing.end.then(timing => {\n              emitTiming('pageview:server')(timing);\n              ctx.timing.render.then(emitTiming('render:server'));\n            });\n          }\n        });\n      } else if (__BROWSER__) {\n        // TODO(#3): We should consider adding render/downstream/upstream timings for the browser\n        let pageData = {};\n        const element = document.getElementById('__ROUTER_DATA__');\n        if (element) {\n          pageData = JSON.parse(unescape(element.textContent));\n        }\n        emitter &&\n          emitter.map(payload => {\n            if (payload && typeof payload === 'object') {\n              payload.__url__ = pageData.title;\n            }\n            return payload;\n          });\n        // Expose the history object\n        const history = createBrowserHistory({basename: ctx.prefix});\n        myAPI.history = history;\n        ctx.element = (\n          <Router\n            history={history}\n            Provider={Provider}\n            basename={ctx.prefix}\n            onRoute={payload => {\n              pageData = payload;\n              emitter && emitter.emit('pageview:browser', payload);\n            }}\n          >\n            {ctx.element}\n          </Router>\n        );\n        return next();\n      }\n    };\n  },\n  provides() {\n    return {\n      from: memoize(() => {\n        const api: {history: HistoryType} = ({\n          history: null,\n        }: any);\n        return api;\n      }),\n    };\n  },\n});\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport plugin, {RouterProviderToken, RouterToken} from './plugin';\nimport * as server from './server';\nimport * as browser from './browser';\n\ndeclare var __BROWSER__: Boolean;\nconst BrowserRouter = __BROWSER__\n  ? browser.BrowserRouter\n  : server.BrowserRouter;\nconst HashRouter = __BROWSER__ ? browser.HashRouter : server.HashRouter;\nconst Link = __BROWSER__ ? browser.Link : server.Link;\nconst matchPath = __BROWSER__ ? browser.matchPath : server.matchPath;\nconst MemoryRouter = __BROWSER__ ? browser.MemoryRouter : server.MemoryRouter;\nconst NavLink = __BROWSER__ ? browser.NavLink : server.NavLink;\nconst Prompt = __BROWSER__ ? browser.Prompt : server.Prompt;\nconst Route = __BROWSER__ ? browser.Route : server.Route;\nconst Router = __BROWSER__ ? browser.Router : server.Router;\nconst Switch = __BROWSER__ ? browser.Switch : server.Switch;\nconst withRouter = __BROWSER__ ? browser.withRouter : server.withRouter;\n\nconst NotFound = __BROWSER__ ? browser.NotFound : server.NotFound;\nconst Redirect = __BROWSER__ ? browser.Redirect : server.Redirect;\nconst Status = __BROWSER__ ? browser.Status : server.Status;\n\nexport default plugin;\nexport {\n  BrowserRouter,\n  HashRouter,\n  Link,\n  matchPath,\n  MemoryRouter,\n  NavLink,\n  NotFound,\n  Prompt,\n  Redirect,\n  Route,\n  Router,\n  Status,\n  Switch,\n  withRouter,\n  RouterProviderToken,\n  RouterToken,\n};\n"],"names":["Status","props","context","staticContext","router","setCode","parseInt","code","render","children","Array","isArray","React","Component","contextTypes","PropTypes","shape","object","NotFound","Redirect","isStatic","perform","componentDidMount","history","push","to","replace","defaultProps","func","isRequired","ServerRouter","getChildContext","onRoute","routeData","Provider","basename","Router","childContextTypes","isEmptyChildren","Children","count","Route","trackingId","component","remainingProps","ReactRouterRoute","routeProps","match","isExact","page","path","title","createElement","only","displayName","BrowserRouter","lastTitle","__IS_PREPARE__","propTypes","node","any","string","bool","BaseRouter","RouterProviderToken","createToken","RouterToken","createPlugin","deps","emitter","UniversalEventsToken","optional","middleware","self","DefaultProvider","ctx","next","prefix","element","myAPI","from","pageData","document","getElementById","JSON","parse","unescape","textContent","map","payload","__url__","createBrowserHistory","React.createElement","emit","provides","memoize","api","browser","HashRouter","Link","matchPath","MemoryRouter","NavLink","Prompt","Switch","withRouter"],"mappings":";;;;;;;;;;;;;;;;AAQA,IAGaA,MAAb;;AAAA;;;kBACcC,KAAZ,EAAwBC,OAAxB,EAAsC;;;wCAC9BD,KAAN,EAAaC,OAAb;QAEWC,aAHyB,GAIhCD,OAJgC,CAGlCE,MAHkC,CAGzBD,aAHyB;;QAKhCA,aAAa,IAAIA,aAAa,CAACE,OAAnC,EAA4C;MAC1CF,aAAa,CAACE,OAAd,CAAsBC,QAAQ,CAAC,MAAKL,KAAL,CAAWM,IAAZ,EAAkB,EAAlB,CAA9B;;;;;;;;SAIJC,MAXF,qBAWW;QACDC,QAAQ,GAAG,KAAKR,KAAL,IAAc,KAAKA,KAAL,CAAWQ,QAA1C;WACOC,KAAK,CAACC,OAAN,CAAcF,QAAd,IAA0BA,QAAQ,CAAC,CAAD,CAAlC,GAAwCA,QAA/C;GAbJ;;;EAA4BG,cAAK,CAACC,SAAlC;AAiBAb,MAAM,CAACc,YAAP,GAAsB;EACpBV,MAAM,EAAEW,SAAS,CAACC,KAAV,CAAgB;IACtBb,aAAa,EAAEY,SAAS,CAACE;GADnB;CADV;AAMA,AAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACjB,KAAD;SACtBW,6BAAC,MAAD;IAAQ,IAAI,EAAE;KAAMX,KAAK,CAACQ,QAA1B,CADsB;CAAjB;;;;;;;;;;;AC1BP,IAGaU,QAAb;;AAAA;;;oBACclB,KAAZ,EAAwBC,OAAxB,EAAsC;;;wCAC9BD,KAAN,EAAaC,OAAb;QACI,MAAKkB,QAAL,CAAclB,OAAd,CAAJ,EAA4B,MAAKmB,OAAL;;;;;;SAG9BC,iBANF,gCAMsB;QACd,CAAC,KAAKF,QAAL,EAAL,EAAsB,KAAKC,OAAL;GAP1B;;SAUED,QAVF,qBAUWlB,OAVX,EAUwC;QAA7BA,OAA6B;MAA7BA,OAA6B,GAAd,KAAKA,OAAS;;;WAC7BA,OAAO,CAACE,MAAR,IAAkBF,OAAO,CAACE,MAAR,CAAeD,aAAxC;GAXJ;;SAcEkB,OAdF,sBAcY;+BACyB,KAAKnB,OAAL,CAAaE,MADtC;QACDmB,OADC,wBACDA,OADC;QACQpB,aADR,wBACQA,aADR;sBAEiB,KAAKF,KAFtB;QAEDuB,IAFC,eAEDA,IAFC;QAEKC,EAFL,eAEKA,EAFL;QAESlB,IAFT,eAESA,IAFT;;QAUJiB,IAAJ,EAAU;MACRD,OAAO,CAACC,IAAR,CAAaC,EAAb;KADF,MAEO;MACLF,OAAO,CAACG,OAAR,CAAgBD,EAAhB;;GA3BN;;SA+BEjB,MA/BF,qBA+BW;WACA,IAAP;GAhCJ;;;EAA8BI,cAAK,CAACC,SAApC;;AAqCAM,QAAQ,CAACQ,YAAT,GAAwB;EACtBH,IAAI,EAAE,KADgB;EAEtBjB,IAAI,EAAE;CAFR;AAKAY,QAAQ,CAACL,YAAT,GAAwB;EACtBV,MAAM,EAAEW,SAAS,CAACC,KAAV,CAAgB;IACtBO,OAAO,EAAER,SAAS,CAACC,KAAV,CAAgB;MACvBQ,IAAI,EAAET,SAAS,CAACa,IAAV,CAAeC,UADE;MAEvBH,OAAO,EAAEX,SAAS,CAACa,IAAV,CAAeC;KAFjB,EAGNA,UAJmB;IAKtB1B,aAAa,EAAEY,SAAS,CAACE;GALnB,EAMLY;CAPL;;;;;;;;;;;AC7CA,AAGA;;;;;;;AAMA,IAAaC,YAAb;;AAAA;;;;;;;;;SACEC,eADF,8BACoB;;;WACT;MACL3B,MAAM,EAAE;QACND,aAAa,EAAE,KAAKF,KAAL,CAAWC,OAAX,IAAsB;OAFlC;MAIL8B,OAAO,EAAE,iBAACC,SAAD;eAAoB,KAAI,CAAChC,KAAL,CAAW+B,OAAX,CAAmBC,SAAnB,CAApB;;KAJX;GAFJ;;SAUEzB,MAVF,qBAUW;sBACyC,KAAKP,KAD9C;QACAiC,QADA,eACAA,QADA;QACUX,OADV,eACUA,OADV;QACmBY,QADnB,eACmBA,QADnB;QAC6B1B,QAD7B,eAC6BA,QAD7B;WAGLG,6BAAC,QAAD;MAAU,QAAQ,EAAEuB,QAApB;MAA8B,OAAO,EAAEZ;OACpCd,QADH,CADF;GAZJ;;;EAAkCG,cAAK,CAACC,SAAxC;;AAqBAiB,YAAY,CAACH,YAAb,GAA4B;EAC1BQ,QAAQ,EAAE,EADgB;EAE1BjC,OAAO,EAAE,EAFiB;EAG1BgC,QAAQ,EAAEE,MAHgB;EAI1BJ,OAAO,EAAE,mBAAM;CAJjB;AAOAF,YAAY,CAACO,iBAAb,GAAiC;EAC/BjC,MAAM,EAAE,kBAAM,EADiB;EAE/B4B,OAAO,EAAE,mBAAM;CAFjB;;;;;;;;;;;;;;;ACrCA,AAIA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAAA7B,QAAQ;SAAIG,cAAK,CAAC2B,QAAN,CAAeC,KAAf,CAAqB/B,QAArB,MAAmC,CAAvC;CAAhC;;AAEA,SAASgC,OAAT,CAAexC,KAAf,EAA2BC,OAA3B,EAAyC;MAChCwC,UADgC,GAC8BzC,KAD9B,CAChCyC,UADgC;MACpBC,SADoB,GAC8B1C,KAD9B,CACpB0C,SADoB;MACTnC,MADS,GAC8BP,KAD9B,CACTO,MADS;MACDC,SADC,GAC8BR,KAD9B,CACDQ,QADC;MACYmC,cADZ,4BAC8B3C,KAD9B;;SAIrCW,6BAACiC,KAAD,eACMD,cADN;;IAGE,QAAQ,EAAE,kBAAAE,UAAU,EAAI;UACfC,KADe,GACND,UADM,CACfC,KADe;;UAElBA,KAAK,IAAIA,KAAK,CAACC,OAAnB,EAA4B;QAC1B9C,OAAO,CAAC8B,OAAR,CAAgB;UACdiB,IAAI,EAAEF,KAAK,CAACG,IADE;UAEdC,KAAK,EAAET,UAAU,IAAIK,KAAK,CAACG;SAF7B;;;UAMEP,SAAJ,EACE,OAAOI,KAAK,GAAGnC,cAAK,CAACwC,aAAN,CAAoBT,SAApB,EAA+BG,UAA/B,CAAH,GAAgD,IAA5D;UAEEtC,MAAJ,EAAY,OAAOuC,KAAK,GAAGvC,MAAM,CAACsC,UAAD,CAAT,GAAwB,IAApC;UAER,OAAOrC,SAAP,KAAoB,UAAxB,EAAoC,OAAOA,SAAQ,CAACqC,UAAD,CAAf;UAEhCrC,SAAQ,IAAI,CAAC6B,eAAe,CAAC7B,SAAD,CAAhC,EACE,OAAOG,cAAK,CAAC2B,QAAN,CAAec,IAAf,CAAoB5C,SAApB,CAAP;aAEK,IAAP;;KAvBN;;;AA6BFgC,OAAK,CAAC3B,YAAN,GAAqB;EACnBkB,OAAO,EAAEjB,SAAS,CAACa,IAAV,CAAeC;CAD1B;AAIAY,OAAK,CAACa,WAAN,GAAoB,aAApB;;AClDA;;;;;;;;;;;;;;;;;ACQA,IAOMC;;;;;4BAGQtD,KAAZ,EAA6BC,OAA7B,EAA2C;;;QAA/BD,KAA+B;MAA/BA,KAA+B,GAAlB,EAAkB;;;wCACnCA,KAAN,EAAaC,OAAb;UACKsD,SAAL,GAAiB,IAAjB;;;;;;SAGFzB,6CAAkB;;;QACT0B,cADS,GACS,KAAKvD,OADd,CACTuD,cADS;WAET;MACLzB,OAAO,EAAE,iBAACC,SAAD,EAAoB;YACvBA,SAAS,CAACkB,KAAV,KAAoB,MAAI,CAACK,SAAzB,IAAsC,CAACC,cAA3C,EAA2D;UACzD,MAAI,CAACD,SAAL,GAAiBvB,SAAS,CAACkB,KAA3B;;UACA,MAAI,CAAClD,KAAL,CAAW+B,OAAX,CAAmBC,SAAnB;;;KAJN;;;SAUFzB,2BAAS;sBAC+B,KAAKP,KADpC;QACAiC,QADA,eACAA,QADA;QACUX,OADV,eACUA,OADV;QACmBY,QADnB,eACmBA,QADnB;WAGLvB,6BAAC,QAAD;MAAU,QAAQ,EAAEuB,QAApB;MAA8B,OAAO,EAAEZ;OACpC,KAAKtB,KAAL,CAAWQ,QADd,CADF;;;;EAtBwBG,cAAK,CAACC;;AA8BlC0C,eAAa,CAACG,SAAd,GAA0B;EACxBjD,QAAQ,EAAEM,SAAS,CAAC4C,IADI;EAExB3B,OAAO,EAAEjB,SAAS,CAACa,IAFK;EAGxBL,OAAO,EAAER,SAAS,CAACE,MAHK;EAIxBiB,QAAQ,EAAEnB,SAAS,CAAC6C,GAJI;EAKxBzB,QAAQ,EAAEpB,SAAS,CAAC8C;CALtB;AAQAN,eAAa,CAACzC,YAAd,GAA6B;EAC3B2C,cAAc,EAAE1C,SAAS,CAAC+C;CAD5B;AAIAP,eAAa,CAAClB,iBAAd,GAAkC;EAChCL,OAAO,EAAEjB,SAAS,CAACa,IAAV,CAAeC;CAD1B;;AAKA0B,eAAa,CAAC5B,YAAd,GAA6B;EAC3BK,OAAO,EAAE,mBAAM,EADY;EAE3BE,QAAQ,EAAE6B;CAFZ;;AC9DA;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;ACQA,AAuBO,IAAMC,mBAEZ,GAAGC,WAAW,CAAC,gBAAD,CAFR;AAIP,AAAO,IAAMC,WAAsC,GAAGD,WAAW,CAAC,QAAD,CAA1D;AAEP,IAAM7B,QAAM,GAAG,AAA0BmB,eAAzC;AAEA,aAAeY,YAAY,CAAC;EAC1BC,IAAI,EAAE;IACJC,OAAO,EAAEC,oBAAoB,CAACC,QAD1B;IAEJrC,QAAQ,EAAE8B,mBAAmB,CAACO;GAHN;EAK1BC,UAAU,EAAE,0BAAwCC,IAAxC,EAAiD;QAA/CJ,OAA+C,QAA/CA,OAA+C;6BAAtCnC,QAAsC;QAAtCA,QAAsC,8BAA3BwC,MAA2B;WACpD,UAAOC,GAAP,EAAYC,IAAZ;;YACCC,MAAM,GAAGF,GAAG,CAACE,MAAJ,IAAc,EAA7B;;YACI,CAACF,GAAG,CAACG,OAAT,EAAkB;yBACTF,IAAI,EAAX;;;YAEIG,KAAK,GAAGN,IAAI,CAACO,IAAL,CAAUL,GAAV,CAAd;;QA6DwB;;cAElBM,SAAQ,GAAG,EAAf;cACMH,OAAO,GAAGI,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAhB;;cACIL,OAAJ,EAAa;YACXG,SAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACR,OAAO,CAACS,WAAT,CAAnB,CAAX;;;UAEFlB,OAAO,IACLA,OAAO,CAACmB,GAAR,CAAY,UAAAC,OAAO,EAAI;gBACjBA,OAAO,IAAI,QAAOA,OAAP,MAAmB,QAAlC,EAA4C;cAC1CA,OAAO,CAACC,OAAR,GAAkBT,SAAQ,CAAC9B,KAA3B;;;mBAEKsC,OAAP;WAJF,CADF,CAPsB;;cAehBlE,QAAO,GAAGoE,oBAAoB,CAAC;YAACxD,QAAQ,EAAEwC,GAAG,CAACE;WAAhB,CAApC;;UACAE,KAAK,CAACxD,OAAN,GAAgBA,QAAhB;UACAoD,GAAG,CAACG,OAAJ,GACEc,cAACxD,QAAD;YACE,OAAO,EAAEb,QADX;YAEE,QAAQ,EAAEW,QAFZ;YAGE,QAAQ,EAAEyC,GAAG,CAACE,MAHhB;YAIE,OAAO,EAAE,iBAAAY,OAAO,EAAI;cAClBR,SAAQ,GAAGQ,OAAX;cACApB,OAAO,IAAIA,OAAO,CAACwB,IAAR,CAAa,kBAAb,EAAiCJ,OAAjC,CAAX;;aAGDd,GAAG,CAACG,OATP,CADF;yBAaOF,IAAI,EAAX;;;;;KAhGJ;GANwB;EA0G1BkB,QA1G0B,sBA0Gf;WACF;MACLd,IAAI,EAAEe,OAAO,CAAC,YAAM;YACZC,GAA2B,GAAI;UACnCzE,OAAO,EAAE;SADX;eAGOyE,GAAP;OAJW;KADf;;CA3GuB,CAA3B;;ACvCA;;;;;;;AAQA,AAKA,IAAMzC,eAAa,GAAG,AAClB0C,aADJ;AAGA,IAAMC,YAAU,GAAG,AAAcD,UAAjC;AACA,IAAME,MAAI,GAAG,AAAcF,IAA3B;AACA,IAAMG,WAAS,GAAG,AAAcH,SAAhC;AACA,IAAMI,cAAY,GAAG,AAAcJ,YAAnC;AACA,IAAMK,SAAO,GAAG,AAAcL,OAA9B;AACA,IAAMM,QAAM,GAAG,AAAcN,MAA7B;AACA,IAAMxD,OAAK,GAAG,AAAcwD,OAA5B;AACA,IAAM7D,QAAM,GAAG,AAAc6D,eAA7B;AACA,IAAMO,QAAM,GAAG,AAAcP,MAA7B;AACA,IAAMQ,YAAU,GAAG,AAAcR,UAAjC;AAEA,IAAM/E,UAAQ,GAAG,AAAc+E,QAA/B;AACA,IAAM9E,UAAQ,GAAG,AAAc8E,QAA/B;AACA,IAAMjG,QAAM,GAAG,AAAciG,MAA7B;;;;;"}