"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _luma = require("luma.gl");

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Arrow2DGeometry =
/*#__PURE__*/
function (_Geometry) {
  _inherits(Arrow2DGeometry, _Geometry);

  function Arrow2DGeometry() {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Arrow2DGeometry);

    return _possibleConstructorReturn(this, (Arrow2DGeometry.__proto__ || Object.getPrototypeOf(Arrow2DGeometry)).call(this, Object.assign({}, opts, {
      attributes: getArrowAttributes(opts)
    })));
  }

  return Arrow2DGeometry;
}(_luma.Geometry);

exports.default = Arrow2DGeometry;

function getArrowAttributes(_ref) {
  var _ref$length = _ref.length,
      length = _ref$length === void 0 ? 1 : _ref$length,
      _ref$headSize = _ref.headSize,
      headSize = _ref$headSize === void 0 ? 0.2 : _ref$headSize,
      _ref$tailWidth = _ref.tailWidth,
      tailWidth = _ref$tailWidth === void 0 ? 0.05 : _ref$tailWidth,
      _ref$tailStart = _ref.tailStart,
      tailStart = _ref$tailStart === void 0 ? 0.05 : _ref$tailStart;
  var texCoords = [// HEAD
  0.5, 1.0, 0, 0.5 - headSize / 2, 1.0 - headSize, 0, 0.5 + headSize / 2, 1.0 - headSize, 0, 0.5 - tailWidth / 2, tailStart, 0, 0.5 + tailWidth / 2, 1.0 - headSize, 0, 0.5 + tailWidth / 2, tailStart, 0, 0.5 - tailWidth / 2, tailStart, 0, 0.5 - tailWidth / 2, 1.0 - headSize, 0, 0.5 + tailWidth / 2, 1.0 - headSize, 0];
  var normals = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]; // Center and scale

  var positions = new Array(texCoords.length);

  for (var i = 0; i < texCoords.length / 3; i++) {
    var i3 = i * 3;
    positions[i3 + 0] = (texCoords[i3 + 0] - 0.5) * length;
    positions[i3 + 1] = (texCoords[i3 + 1] - 0.5) * length;
    positions[i3 + 2] = 0;
  }

  return {
    positions: new Float32Array(positions),
    normals: new Float32Array(normals),
    texCoords: new Float32Array(texCoords)
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXRoLW1hcmtlci1sYXllci9hcnJvdy0yZC1nZW9tZXRyeS5qcyJdLCJuYW1lcyI6WyJBcnJvdzJER2VvbWV0cnkiLCJvcHRzIiwiT2JqZWN0IiwiYXNzaWduIiwiYXR0cmlidXRlcyIsImdldEFycm93QXR0cmlidXRlcyIsIkdlb21ldHJ5IiwibGVuZ3RoIiwiaGVhZFNpemUiLCJ0YWlsV2lkdGgiLCJ0YWlsU3RhcnQiLCJ0ZXhDb29yZHMiLCJub3JtYWxzIiwicG9zaXRpb25zIiwiQXJyYXkiLCJpIiwiaTMiLCJGbG9hdDMyQXJyYXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7OztJQUVxQkEsZTs7Ozs7QUFDbkIsNkJBQXVCO0FBQUEsUUFBWEMsSUFBVyx1RUFBSixFQUFJOztBQUFBOztBQUFBLDZIQUVuQkMsT0FBT0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JGLElBQWxCLEVBQXdCO0FBQ3RCRyxrQkFBWUMsbUJBQW1CSixJQUFuQjtBQURVLEtBQXhCLENBRm1CO0FBTXRCOzs7RUFQMENLLGM7Ozs7QUFVN0MsU0FBU0Qsa0JBQVQsT0FBOEY7QUFBQSx5QkFBakVFLE1BQWlFO0FBQUEsTUFBakVBLE1BQWlFLDRCQUF4RCxDQUF3RDtBQUFBLDJCQUFyREMsUUFBcUQ7QUFBQSxNQUFyREEsUUFBcUQsOEJBQTFDLEdBQTBDO0FBQUEsNEJBQXJDQyxTQUFxQztBQUFBLE1BQXJDQSxTQUFxQywrQkFBekIsSUFBeUI7QUFBQSw0QkFBbkJDLFNBQW1CO0FBQUEsTUFBbkJBLFNBQW1CLCtCQUFQLElBQU87QUFDNUYsTUFBTUMsWUFBWSxDQUNoQjtBQUNBLEtBRmdCLEVBR2hCLEdBSGdCLEVBSWhCLENBSmdCLEVBS2hCLE1BQU1ILFdBQVcsQ0FMRCxFQU1oQixNQUFNQSxRQU5VLEVBT2hCLENBUGdCLEVBUWhCLE1BQU1BLFdBQVcsQ0FSRCxFQVNoQixNQUFNQSxRQVRVLEVBVWhCLENBVmdCLEVBWWhCLE1BQU1DLFlBQVksQ0FaRixFQWFoQkMsU0FiZ0IsRUFjaEIsQ0FkZ0IsRUFlaEIsTUFBTUQsWUFBWSxDQWZGLEVBZ0JoQixNQUFNRCxRQWhCVSxFQWlCaEIsQ0FqQmdCLEVBa0JoQixNQUFNQyxZQUFZLENBbEJGLEVBbUJoQkMsU0FuQmdCLEVBb0JoQixDQXBCZ0IsRUFzQmhCLE1BQU1ELFlBQVksQ0F0QkYsRUF1QmhCQyxTQXZCZ0IsRUF3QmhCLENBeEJnQixFQXlCaEIsTUFBTUQsWUFBWSxDQXpCRixFQTBCaEIsTUFBTUQsUUExQlUsRUEyQmhCLENBM0JnQixFQTRCaEIsTUFBTUMsWUFBWSxDQTVCRixFQTZCaEIsTUFBTUQsUUE3QlUsRUE4QmhCLENBOUJnQixDQUFsQjtBQWlDQSxNQUFNSSxVQUFVLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVixFQUFhLENBQWIsRUFBZ0IsQ0FBaEIsRUFBbUIsQ0FBbkIsRUFBc0IsQ0FBdEIsRUFBeUIsQ0FBekIsRUFBNEIsQ0FBNUIsRUFBK0IsQ0FBL0IsRUFBa0MsQ0FBbEMsRUFBcUMsQ0FBckMsRUFBd0MsQ0FBeEMsRUFBMkMsQ0FBM0MsRUFBOEMsQ0FBOUMsRUFBaUQsQ0FBakQsRUFBb0QsQ0FBcEQsRUFBdUQsQ0FBdkQsRUFBMEQsQ0FBMUQsRUFBNkQsQ0FBN0QsRUFBZ0UsQ0FBaEUsRUFBbUUsQ0FBbkUsRUFBc0UsQ0FBdEUsRUFBeUUsQ0FBekUsRUFBNEUsQ0FBNUUsRUFBK0UsQ0FBL0UsQ0FBaEIsQ0FsQzRGLENBb0M1Rjs7QUFDQSxNQUFNQyxZQUFZLElBQUlDLEtBQUosQ0FBVUgsVUFBVUosTUFBcEIsQ0FBbEI7O0FBQ0EsT0FBSyxJQUFJUSxJQUFJLENBQWIsRUFBZ0JBLElBQUlKLFVBQVVKLE1BQVYsR0FBbUIsQ0FBdkMsRUFBMENRLEdBQTFDLEVBQStDO0FBQzdDLFFBQU1DLEtBQUtELElBQUksQ0FBZjtBQUNBRixjQUFVRyxLQUFLLENBQWYsSUFBb0IsQ0FBQ0wsVUFBVUssS0FBSyxDQUFmLElBQW9CLEdBQXJCLElBQTRCVCxNQUFoRDtBQUNBTSxjQUFVRyxLQUFLLENBQWYsSUFBb0IsQ0FBQ0wsVUFBVUssS0FBSyxDQUFmLElBQW9CLEdBQXJCLElBQTRCVCxNQUFoRDtBQUNBTSxjQUFVRyxLQUFLLENBQWYsSUFBb0IsQ0FBcEI7QUFDRDs7QUFDRCxTQUFPO0FBQ0xILGVBQVcsSUFBSUksWUFBSixDQUFpQkosU0FBakIsQ0FETjtBQUVMRCxhQUFTLElBQUlLLFlBQUosQ0FBaUJMLE9BQWpCLENBRko7QUFHTEQsZUFBVyxJQUFJTSxZQUFKLENBQWlCTixTQUFqQjtBQUhOLEdBQVA7QUFLRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7R2VvbWV0cnl9IGZyb20gJ2x1bWEuZ2wnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcnJvdzJER2VvbWV0cnkgZXh0ZW5kcyBHZW9tZXRyeSB7XG4gIGNvbnN0cnVjdG9yKG9wdHMgPSB7fSkge1xuICAgIHN1cGVyKFxuICAgICAgT2JqZWN0LmFzc2lnbih7fSwgb3B0cywge1xuICAgICAgICBhdHRyaWJ1dGVzOiBnZXRBcnJvd0F0dHJpYnV0ZXMob3B0cylcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRBcnJvd0F0dHJpYnV0ZXMoe2xlbmd0aCA9IDEsIGhlYWRTaXplID0gMC4yLCB0YWlsV2lkdGggPSAwLjA1LCB0YWlsU3RhcnQgPSAwLjA1fSkge1xuICBjb25zdCB0ZXhDb29yZHMgPSBbXG4gICAgLy8gSEVBRFxuICAgIDAuNSxcbiAgICAxLjAsXG4gICAgMCxcbiAgICAwLjUgLSBoZWFkU2l6ZSAvIDIsXG4gICAgMS4wIC0gaGVhZFNpemUsXG4gICAgMCxcbiAgICAwLjUgKyBoZWFkU2l6ZSAvIDIsXG4gICAgMS4wIC0gaGVhZFNpemUsXG4gICAgMCxcblxuICAgIDAuNSAtIHRhaWxXaWR0aCAvIDIsXG4gICAgdGFpbFN0YXJ0LFxuICAgIDAsXG4gICAgMC41ICsgdGFpbFdpZHRoIC8gMixcbiAgICAxLjAgLSBoZWFkU2l6ZSxcbiAgICAwLFxuICAgIDAuNSArIHRhaWxXaWR0aCAvIDIsXG4gICAgdGFpbFN0YXJ0LFxuICAgIDAsXG5cbiAgICAwLjUgLSB0YWlsV2lkdGggLyAyLFxuICAgIHRhaWxTdGFydCxcbiAgICAwLFxuICAgIDAuNSAtIHRhaWxXaWR0aCAvIDIsXG4gICAgMS4wIC0gaGVhZFNpemUsXG4gICAgMCxcbiAgICAwLjUgKyB0YWlsV2lkdGggLyAyLFxuICAgIDEuMCAtIGhlYWRTaXplLFxuICAgIDBcbiAgXTtcblxuICBjb25zdCBub3JtYWxzID0gWzAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDFdO1xuXG4gIC8vIENlbnRlciBhbmQgc2NhbGVcbiAgY29uc3QgcG9zaXRpb25zID0gbmV3IEFycmF5KHRleENvb3Jkcy5sZW5ndGgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHRleENvb3Jkcy5sZW5ndGggLyAzOyBpKyspIHtcbiAgICBjb25zdCBpMyA9IGkgKiAzO1xuICAgIHBvc2l0aW9uc1tpMyArIDBdID0gKHRleENvb3Jkc1tpMyArIDBdIC0gMC41KSAqIGxlbmd0aDtcbiAgICBwb3NpdGlvbnNbaTMgKyAxXSA9ICh0ZXhDb29yZHNbaTMgKyAxXSAtIDAuNSkgKiBsZW5ndGg7XG4gICAgcG9zaXRpb25zW2kzICsgMl0gPSAwO1xuICB9XG4gIHJldHVybiB7XG4gICAgcG9zaXRpb25zOiBuZXcgRmxvYXQzMkFycmF5KHBvc2l0aW9ucyksXG4gICAgbm9ybWFsczogbmV3IEZsb2F0MzJBcnJheShub3JtYWxzKSxcbiAgICB0ZXhDb29yZHM6IG5ldyBGbG9hdDMyQXJyYXkodGV4Q29vcmRzKVxuICB9O1xufVxuIl19