{"version":3,"sources":["../../../src/lib/deck.js"],"names":["LayerManager","ViewManager","MapView","EffectManager","Effect","log","GL","AnimationLoop","createGLContext","setParameters","Stats","EventManager","assert","VENDOR_PREFIX","noop","PREFIX","CURSOR","GRABBING","GRAB","POINTER","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLayerClick","onLayerHover","onLoad","debug","drawPickingColors","defaultProps","Deck","constructor","props","Object","assign","viewManager","layerManager","effectManager","stats","_needsRedraw","initialViewState","interactiveState","_onClick","bind","_onPointerMove","_onPointerLeave","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","canvas","_createCanvas","animationLoop","_createAnimationLoop","setProps","start","finalize","stop","eventManager","destroy","timeStart","_setCanvasSize","newProps","_getViews","_getViewState","timeEnd","needsRedraw","clearRedrawFlags","redraw","getViews","getViewports","rect","pickObject","x","y","radius","layerIds","selectedInfos","viewports","mode","depth","length","pickMultipleObjects","pickObjects","infos","document","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_updateCanvasSize","_checkForCanvasSizeChange","clientWidth","clientHeight","autoResizeDrawingBuffer","onCreateContext","opts","onInitialize","onRender","Array","isArray","options","pos","event","offsetCenter","callback","firstInfo","find","info","index","srcEvent","params","viewId","_updateCursor","cursor","blend","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","polygonOffsetFill","depthTest","depthFunc","LEQUAL","events","click","pointermove","pointerleave","onInteractiveStateChange","effect","addEffect","oneSecondPassed","table","getStatsTable","reset","updateLayers","bump","redrawReason","drawLayers","pass","leftButton","rightButton"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from '../lib/layer-manager';\nimport ViewManager from '../views/view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from '../experimental/lib/effect-manager';\nimport Effect from '../experimental/lib/effect';\nimport log from '../utils/log';\n\nimport GL from 'luma.gl/constants';\nimport {AnimationLoop, createGLContext, setParameters} from 'luma.gl';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport VENDOR_PREFIX from '../utils/css-vendor-prefix';\n/* global document */\n\nfunction noop() {}\n\nconst PREFIX = VENDOR_PREFIX === '-webkit-' ? VENDOR_PREFIX : '';\n\nconst CURSOR = {\n  GRABBING: `${PREFIX}grabbing`,\n  GRAB: `${PREFIX}grab`,\n  POINTER: 'pointer'\n};\n\nconst getCursor = ({isDragging}) => (isDragging ? CURSOR.GRABBING : CURSOR.GRAB);\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.bool,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLayerClick: PropTypes.func,\n    onLayerHover: PropTypes.func,\n    onLoad: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLayerClick: null,\n  onLayerHover: null,\n  onLoad: noop,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n\n    this.stats = new Stats({id: 'deck.gl'});\n\n    this._needsRedraw = true;\n\n    this.viewState = props.initialViewState || null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onClick = this._onClick.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerLeave = this._onPointerLeave.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    // Note: LayerManager creation deferred until gl context available\n    this.canvas = this._createCanvas(props);\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.viewManager) {\n      this.viewManager.finalize();\n      this.viewManager = null;\n    }\n\n    if (this.eventManager) {\n      this.eventManager.destroy();\n    }\n  }\n\n  setProps(props) {\n    this.stats.timeStart('deck.setProps');\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      views: this._getViews(props),\n      viewState: this._getViewState(props),\n      width: this.width,\n      height: this.height\n    });\n\n    // Update view manager props\n    if (this.viewManager) {\n      this.viewManager.setProps(newProps);\n    }\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setProps(newProps);\n    }\n\n    // Update animation loop\n    if (this.animationLoop) {\n      this.animationLoop.setProps(newProps);\n    }\n\n    this.stats.timeEnd('deck.setProps');\n  }\n\n  // Public API\n\n  // Check if a redraw is needed\n  needsRedraw({clearRedrawFlags = true} = {}) {\n    let redraw = this._needsRedraw;\n\n    if (clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    redraw = redraw || this.viewManager.needsRedraw({clearRedrawFlags});\n    redraw = redraw || this.layerManager.needsRedraw({clearRedrawFlags});\n    return redraw;\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.timeStart('deck.pickObject');\n    const selectedInfos = this.layerManager.pickObject({\n      x,\n      y,\n      radius,\n      layerIds,\n      viewports: this.getViewports({x, y}),\n      mode: 'query',\n      depth: 1\n    });\n    this.stats.timeEnd('deck.pickObject');\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    this.stats.timeStart('deck.pickMultipleObjects');\n    const selectedInfos = this.layerManager.pickObject({\n      x,\n      y,\n      radius,\n      layerIds,\n      viewports: this.getViewports({x, y}),\n      mode: 'query',\n      depth\n    });\n    this.stats.timeEnd('deck.pickMultipleObjects');\n    return selectedInfos;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.timeStart('deck.pickObjects');\n    const infos = this.layerManager.pickObjects({\n      x,\n      y,\n      width,\n      height,\n      layerIds,\n      viewports: this.getViewports({x, y, width, height})\n    });\n    this.stats.timeEnd('deck.pickObjects');\n    return infos;\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    const {canvas} = this;\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      canvas.style.position = 'absolute';\n      canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (canvas && (this.width !== canvas.clientWidth || this.height !== canvas.clientHeight)) {\n      this.width = canvas.clientWidth;\n      this.height = canvas.clientHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      onCreateContext: opts =>\n        gl || createGLContext(Object.assign({}, glOptions, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState(props) {\n    return props.viewState || this.viewState || {};\n  }\n\n  // Get the view descriptor list\n  _getViews(props) {\n    // Default to a full screen map view port\n    let views = props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = props.controller;\n    }\n    return views;\n  }\n\n  _pickAndCallback(options) {\n    const pos = options.event.offsetCenter;\n    // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n    // assertion error when attempting to unproject the position.\n    if (!pos) {\n      return;\n    }\n\n    const radius = this.props.pickingRadius;\n    const selectedInfos = this.layerManager.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius,\n      viewports: this.getViewports(pos),\n      mode: options.mode,\n      depth: 1\n    });\n    if (options.callback && selectedInfos) {\n      const firstInfo = selectedInfos.find(info => info.index >= 0) || null;\n      // As per documentation, send null value when no valid object is picked.\n      options.callback(firstInfo, selectedInfos, options.event.srcEvent);\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState[params.viewId] = viewState;\n      this.viewManager.setProps({viewState});\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  _updateCursor() {\n    this.canvas.style.cursor = this.props.getCursor(this.interactiveState);\n  }\n\n  _onRendererInitialized({gl, canvas}) {\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    this.eventManager = new EventManager(canvas, {\n      events: {\n        click: this._onClick,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerLeave\n      }\n    });\n\n    this.viewManager = new ViewManager({\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange\n    });\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {stats: this.stats});\n\n    this.effectManager = new EffectManager({gl, layerManager: this.layerManager});\n\n    for (const effect of this.props.effects) {\n      this.effectManager.addEffect(effect);\n    }\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _onRenderFrame({gl}) {\n    // Log perf stats every second\n    if (this.stats.oneSecondPassed()) {\n      const table = this.stats.getStatsTable();\n      this.stats.reset();\n      log.table(3, table)();\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    this.layerManager.updateLayers();\n\n    this.stats.bump('fps');\n\n    const redrawReason = this.needsRedraw({clearRedrawFlags: true});\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.bump('render-fps');\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    const {drawPickingColors} = this.props; // Debug picking, helpful in framebuffered layers\n    this.layerManager.drawLayers({\n      pass: 'screen',\n      viewports: this.getViewports(),\n      redrawReason,\n      drawPickingColors\n    });\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Route move events to layers. call the `onHover` prop of any picked layer,\n  // and `onLayerHover` is called directly from here with any picking info generated by `pickLayer`.\n  // @param {Object} event  A mjolnir.js event\n  _onClick(event) {\n    this._pickAndCallback({\n      callback: this.props.onLayerClick,\n      event,\n      mode: 'click'\n    });\n  }\n\n  _onPointerMove(event) {\n    if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    }\n    this._pickAndCallback({\n      callback: this.props.onLayerHover,\n      event,\n      mode: 'hover'\n    });\n  }\n\n  _onPointerLeave(event) {\n    this.layerManager.pickObject({\n      x: -1,\n      y: -1,\n      viewports: [],\n      radius: 1,\n      mode: 'hover'\n    });\n    if (this.props.onLayerHover) {\n      this.props.onLayerHover(null, [], event.srcEvent);\n    }\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n"],"file":"deck.js"}