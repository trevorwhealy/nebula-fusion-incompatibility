{"version":3,"sources":["../../../src/lib/deck.js"],"names":["noop","PREFIX","VENDOR_PREFIX","CURSOR","GRABBING","GRAB","POINTER","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","Effect","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLayerClick","onLayerHover","onLoad","debug","drawPickingColors","defaultProps","Deck","props","Object","assign","viewManager","layerManager","effectManager","stats","Stats","_needsRedraw","initialViewState","interactiveState","_onClick","bind","_onPointerMove","_onPointerLeave","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","canvas","_createCanvas","animationLoop","_createAnimationLoop","setProps","start","stop","finalize","eventManager","destroy","timeStart","_setCanvasSize","newProps","_getViews","_getViewState","timeEnd","clearRedrawFlags","redraw","needsRedraw","rect","getViewports","x","y","radius","layerIds","selectedInfos","pickObject","viewports","mode","depth","length","infos","pickObjects","document","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_checkForCanvasSizeChange","clientWidth","clientHeight","autoResizeDrawingBuffer","AnimationLoop","onCreateContext","onInitialize","onRender","MapView","Array","isArray","options","pos","event","offsetCenter","callback","firstInfo","find","info","index","srcEvent","params","viewId","cursor","blend","blendFunc","GL","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","polygonOffsetFill","depthTest","depthFunc","LEQUAL","EventManager","events","click","pointermove","pointerleave","ViewManager","onInteractiveStateChange","LayerManager","EffectManager","effect","addEffect","_updateCanvasSize","oneSecondPassed","table","getStatsTable","reset","log","_updateCursor","updateLayers","bump","redrawReason","drawLayers","pass","leftButton","rightButton"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from '../lib/layer-manager';\nimport ViewManager from '../views/view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from '../experimental/lib/effect-manager';\nimport Effect from '../experimental/lib/effect';\nimport log from '../utils/log';\n\nimport GL from 'luma.gl/constants';\nimport {AnimationLoop, createGLContext, setParameters} from 'luma.gl';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport VENDOR_PREFIX from '../utils/css-vendor-prefix';\n/* global document */\n\nfunction noop() {}\n\nconst PREFIX = VENDOR_PREFIX === '-webkit-' ? VENDOR_PREFIX : '';\n\nconst CURSOR = {\n  GRABBING: `${PREFIX}grabbing`,\n  GRAB: `${PREFIX}grab`,\n  POINTER: 'pointer'\n};\n\nconst getCursor = ({isDragging}) => (isDragging ? CURSOR.GRABBING : CURSOR.GRAB);\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.bool,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLayerClick: PropTypes.func,\n    onLayerHover: PropTypes.func,\n    onLoad: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLayerClick: null,\n  onLayerHover: null,\n  onLoad: noop,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n\n    this.stats = new Stats({id: 'deck.gl'});\n\n    this._needsRedraw = true;\n\n    this.viewState = props.initialViewState || null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onClick = this._onClick.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerLeave = this._onPointerLeave.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    // Note: LayerManager creation deferred until gl context available\n    this.canvas = this._createCanvas(props);\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.viewManager) {\n      this.viewManager.finalize();\n      this.viewManager = null;\n    }\n\n    if (this.eventManager) {\n      this.eventManager.destroy();\n    }\n  }\n\n  setProps(props) {\n    this.stats.timeStart('deck.setProps');\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      views: this._getViews(props),\n      viewState: this._getViewState(props),\n      width: this.width,\n      height: this.height\n    });\n\n    // Update view manager props\n    if (this.viewManager) {\n      this.viewManager.setProps(newProps);\n    }\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setProps(newProps);\n    }\n\n    // Update animation loop\n    if (this.animationLoop) {\n      this.animationLoop.setProps(newProps);\n    }\n\n    this.stats.timeEnd('deck.setProps');\n  }\n\n  // Public API\n\n  // Check if a redraw is needed\n  needsRedraw({clearRedrawFlags = true} = {}) {\n    let redraw = this._needsRedraw;\n\n    if (clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    redraw = redraw || this.viewManager.needsRedraw({clearRedrawFlags});\n    redraw = redraw || this.layerManager.needsRedraw({clearRedrawFlags});\n    return redraw;\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.timeStart('deck.pickObject');\n    const selectedInfos = this.layerManager.pickObject({\n      x,\n      y,\n      radius,\n      layerIds,\n      viewports: this.getViewports({x, y}),\n      mode: 'query',\n      depth: 1\n    });\n    this.stats.timeEnd('deck.pickObject');\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    this.stats.timeStart('deck.pickMultipleObjects');\n    const selectedInfos = this.layerManager.pickObject({\n      x,\n      y,\n      radius,\n      layerIds,\n      viewports: this.getViewports({x, y}),\n      mode: 'query',\n      depth\n    });\n    this.stats.timeEnd('deck.pickMultipleObjects');\n    return selectedInfos;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.timeStart('deck.pickObjects');\n    const infos = this.layerManager.pickObjects({\n      x,\n      y,\n      width,\n      height,\n      layerIds,\n      viewports: this.getViewports({x, y, width, height})\n    });\n    this.stats.timeEnd('deck.pickObjects');\n    return infos;\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    const {canvas} = this;\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      canvas.style.position = 'absolute';\n      canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (canvas && (this.width !== canvas.clientWidth || this.height !== canvas.clientHeight)) {\n      this.width = canvas.clientWidth;\n      this.height = canvas.clientHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      onCreateContext: opts =>\n        gl || createGLContext(Object.assign({}, glOptions, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState(props) {\n    return props.viewState || this.viewState || {};\n  }\n\n  // Get the view descriptor list\n  _getViews(props) {\n    // Default to a full screen map view port\n    let views = props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = props.controller;\n    }\n    return views;\n  }\n\n  _pickAndCallback(options) {\n    const pos = options.event.offsetCenter;\n    // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n    // assertion error when attempting to unproject the position.\n    if (!pos) {\n      return;\n    }\n\n    const radius = this.props.pickingRadius;\n    const selectedInfos = this.layerManager.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius,\n      viewports: this.getViewports(pos),\n      mode: options.mode,\n      depth: 1\n    });\n    if (options.callback && selectedInfos) {\n      const firstInfo = selectedInfos.find(info => info.index >= 0) || null;\n      // As per documentation, send null value when no valid object is picked.\n      options.callback(firstInfo, selectedInfos, options.event.srcEvent);\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState[params.viewId] = viewState;\n      this.viewManager.setProps({viewState});\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  _updateCursor() {\n    this.canvas.style.cursor = this.props.getCursor(this.interactiveState);\n  }\n\n  _onRendererInitialized({gl, canvas}) {\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    this.eventManager = new EventManager(canvas, {\n      events: {\n        click: this._onClick,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerLeave\n      }\n    });\n\n    this.viewManager = new ViewManager({\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange\n    });\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {stats: this.stats});\n\n    this.effectManager = new EffectManager({gl, layerManager: this.layerManager});\n\n    for (const effect of this.props.effects) {\n      this.effectManager.addEffect(effect);\n    }\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _onRenderFrame({gl}) {\n    // Log perf stats every second\n    if (this.stats.oneSecondPassed()) {\n      const table = this.stats.getStatsTable();\n      this.stats.reset();\n      log.table(3, table)();\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    this.layerManager.updateLayers();\n\n    this.stats.bump('fps');\n\n    const redrawReason = this.needsRedraw({clearRedrawFlags: true});\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.bump('render-fps');\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    const {drawPickingColors} = this.props; // Debug picking, helpful in framebuffered layers\n    this.layerManager.drawLayers({\n      pass: 'screen',\n      viewports: this.getViewports(),\n      redrawReason,\n      drawPickingColors\n    });\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Route move events to layers. call the `onHover` prop of any picked layer,\n  // and `onLayerHover` is called directly from here with any picking info generated by `pickLayer`.\n  // @param {Object} event  A mjolnir.js event\n  _onClick(event) {\n    this._pickAndCallback({\n      callback: this.props.onLayerClick,\n      event,\n      mode: 'click'\n    });\n  }\n\n  _onPointerMove(event) {\n    if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    }\n    this._pickAndCallback({\n      callback: this.props.onLayerHover,\n      event,\n      mode: 'hover'\n    });\n  }\n\n  _onPointerLeave(event) {\n    this.layerManager.pickObject({\n      x: -1,\n      y: -1,\n      viewports: [],\n      radius: 1,\n      mode: 'hover'\n    });\n    if (this.props.onLayerHover) {\n      this.props.onLayerHover(null, [], event.srcEvent);\n    }\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n"],"file":"deck.js"}