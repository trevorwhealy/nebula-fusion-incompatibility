{"version":3,"sources":["../../../src/arc-layer/arc-layer.js"],"names":["fp64LowPart","fp64","DEFAULT_COLOR","defaultProps","getSourcePosition","x","sourcePosition","getTargetPosition","targetPosition","getSourceColor","getTargetColor","getStrokeWidth","ArcLayer","props","overrideProps","Number","isFinite","strokeWidth","log","deprecated","use64bitProjection","vs","vs64","fs","modules","attributeManager","getAttributeManager","addInstanced","instancePositions","size","transition","accessor","update","calculateInstancePositions","instancePositions64Low","calculateInstancePositions64Low","instanceSourceColors","type","GL","UNSIGNED_BYTE","defaultValue","instanceTargetColors","instanceWidths","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","positions","NUM_SEGMENTS","i","concat","Model","Object","assign","getShaders","id","geometry","Geometry","drawMode","TRIANGLE_STRIP","attributes","Float32Array","isInstanced","shaderCache","setUniforms","numSegments","attribute","data","value","object","isFP64","use64bitPositions","constant","Layer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, log} from '@deck.gl/core';\n\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './arc-layer-vertex.glsl';\nimport vs64 from './arc-layer-vertex-64.glsl';\nimport fs from './arc-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  fp64: false,\n\n  getSourcePosition: x => x.sourcePosition,\n  getTargetPosition: x => x.targetPosition,\n  getSourceColor: DEFAULT_COLOR,\n  getTargetColor: DEFAULT_COLOR,\n  getStrokeWidth: 1\n};\n\nexport default class ArcLayer extends Layer {\n  constructor(props) {\n    let overrideProps = null;\n    if (Number.isFinite(props.strokeWidth)) {\n      log.deprecated('ArcLayer: `strokeWidth`', '`getStrokeWidth`');\n      overrideProps = {\n        getStrokeWidth: props.strokeWidth\n      };\n    }\n    super(props, overrideProps);\n  }\n\n  getShaders() {\n    return this.use64bitProjection()\n      ? {vs: vs64, fs, modules: ['project64', 'picking']}\n      : {vs, fs, modules: ['picking']}; // 'project' module added by default.\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 4,\n        transition: true,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstancePositions\n      },\n      instancePositions64Low: {\n        size: 4,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstancePositions64Low\n      },\n      instanceSourceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getSourceColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceTargetColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getTargetColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getStrokeWidth',\n        defaultValue: 1\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    // Re-generate model if geometry changed\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  _getModel(gl) {\n    let positions = [];\n    const NUM_SEGMENTS = 50;\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    for (let i = 0; i < NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, -1, 0, i, 1, 0]);\n    }\n\n    const model = new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n\n    model.setUniforms({numSegments: NUM_SEGMENTS});\n\n    return model;\n  }\n\n  calculateInstancePositions(attribute) {\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    for (const object of data) {\n      const sourcePosition = getSourcePosition(object);\n      const targetPosition = getTargetPosition(object);\n      value[i + 0] = sourcePosition[0];\n      value[i + 1] = sourcePosition[1];\n      value[i + 2] = targetPosition[0];\n      value[i + 3] = targetPosition[1];\n      i += size;\n    }\n  }\n\n  calculateInstancePositions64Low(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(4);\n      return;\n    }\n\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    for (const object of data) {\n      const sourcePosition = getSourcePosition(object);\n      const targetPosition = getTargetPosition(object);\n      value[i + 0] = fp64LowPart(sourcePosition[0]);\n      value[i + 1] = fp64LowPart(sourcePosition[1]);\n      value[i + 2] = fp64LowPart(targetPosition[0]);\n      value[i + 3] = fp64LowPart(targetPosition[1]);\n      i += size;\n    }\n  }\n}\n\nArcLayer.layerName = 'ArcLayer';\nArcLayer.defaultProps = defaultProps;\n"],"file":"arc-layer.js"}