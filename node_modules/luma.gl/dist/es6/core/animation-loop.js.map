{"version":3,"sources":["../../../src/core/animation-loop.js"],"names":["createGLContext","resizeGLContext","resetParameters","pageLoadPromise","makeDebugContext","isWebGL","requestAnimationFrame","cancelAnimationFrame","log","assert","Framebuffer","DEFAULT_GL_OPTIONS","preserveDrawingBuffer","AnimationLoop","constructor","props","onCreateContext","opts","onAddHTML","onInitialize","onRender","onFinalize","offScreen","gl","glOptions","debug","createFramebuffer","autoResizeViewport","autoResizeDrawingBuffer","useDevicePixels","deprecated","useDevicePixelRatio","needsRedraw","setProps","start","bind","stop","_renderFrame","setNeedsRedraw","reason","_stopped","_animationFrameId","_startPromise","then","_createWebGLContext","_createFramebuffer","_initializeCallbackData","_updateCallbackData","_resizeCanvasDrawingBuffer","_resizeViewport","animationProps","appContext","_addCallbackData","_finalizeCallbackData","args","getHTMLControlValue","id","defaultValue","element","document","getElementById","Number","value","setViewParameters","removed","_setupFrame","_onSetupFrame","_resizeFramebuffer","commit","canvas","framebuffer","startTime","Date","now","time","tick","tock","_loop","_animationLoop","width","drawingBufferWidth","height","drawingBufferHeight","aspect","Math","floor","_offScreen","Object","assign","Error","_createInfoDiv","wrapperDiv","createElement","body","appendChild","style","position","div","left","bottom","background","html","innerHTML","viewport","resize"],"mappings":"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","sourcesContent":["import {createGLContext, resizeGLContext, resetParameters} from '../webgl-context';\nimport {pageLoadPromise} from '../webgl-context';\nimport {makeDebugContext} from '../webgl-context/debug-context';\nimport {isWebGL, requestAnimationFrame, cancelAnimationFrame} from '../webgl-utils';\nimport {log} from '../utils';\nimport assert from '../utils/assert';\n\n// TODO - remove dependency on webgl classes\nimport {Framebuffer} from '../webgl';\n\nconst DEFAULT_GL_OPTIONS = {\n  preserveDrawingBuffer: true\n};\n\nexport default class AnimationLoop {\n  /*\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\n   */\n  constructor(props = {}) {\n    const {\n      onCreateContext = opts => createGLContext(opts),\n      onAddHTML = null,\n      onInitialize = () => {},\n      onRender = () => {},\n      onFinalize = () => {},\n\n      offScreen = false,\n      gl = null,\n      glOptions = {},\n      debug = false,\n\n      createFramebuffer = false,\n\n      // view parameters\n      autoResizeViewport = true,\n      autoResizeDrawingBuffer = true\n    } = props;\n\n    let {\n      useDevicePixels = true\n    } = props;\n\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n\n    this.props = {\n      onCreateContext,\n      onAddHTML,\n      onInitialize,\n      onRender,\n      onFinalize,\n\n      gl,\n      glOptions,\n      debug,\n      createFramebuffer\n    };\n\n    // state\n    this.gl = gl;\n    this.offScreen = offScreen;\n    this.needsRedraw = null;\n\n    this.setProps({\n      autoResizeViewport,\n      autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n\n    // Bind methods\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this._renderFrame = this._renderFrame.bind(this);\n\n    return this;\n  }\n\n  setNeedsRedraw(reason) {\n    assert(typeof reason === 'string');\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n\n  setProps(props) {\n    if ('autoResizeViewport' in props) {\n      this.autoResizeViewport = props.autoResizeViewport;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n    }\n    if ('useDevicePixels' in props) {\n      this.useDevicePixels = props.useDevicePixels;\n    }\n    return this;\n  }\n\n  // Starts a render loop if not already running\n  // @param {Object} context - contains frame specific info (E.g. tick, width, height, etc)\n  start(opts = {}) {\n    this._stopped = false;\n    // console.debug(`Starting ${this.constructor.name}`);\n    if (!this._animationFrameId) {\n      // Wait for start promise before rendering frame\n      this._startPromise = pageLoadPromise\n      .then(() => {\n        if (this._stopped) {\n          return null;\n        }\n\n        // Create the WebGL context\n        this._createWebGLContext(opts);\n        this._createFramebuffer();\n\n        // Initialize the callback data\n        this._initializeCallbackData();\n        this._updateCallbackData();\n\n        // Default viewport setup, in case onInitialize wants to render\n        this._resizeCanvasDrawingBuffer();\n        this._resizeViewport();\n\n        // Note: onIntialize can return a promise (in case it needs to load resources)\n        return this.onInitialize(this.animationProps);\n      })\n      .then(appContext => {\n        if (!this._stopped) {\n          this._addCallbackData(appContext || {});\n          if (appContext !== false && !this._animationFrameId) {\n            this._animationFrameId = requestAnimationFrame(this._renderFrame);\n          }\n        }\n      });\n\n    }\n    return this;\n  }\n\n  // Stops a render loop if already running, finalizing\n  stop() {\n    // console.debug(`Stopping ${this.constructor.name}`);\n    if (this._animationFrameId) {\n      this._finalizeCallbackData();\n      cancelAnimationFrame(this._animationFrameId);\n      this._animationFrameId = null;\n      this._stopped = true;\n    }\n    return this;\n  }\n\n  onCreateContext(...args) {\n    return this.props.onCreateContext(...args);\n  }\n\n  onInitialize(...args) {\n    return this.props.onInitialize(...args);\n  }\n\n  onRender(...args) {\n    return this.props.onRender(...args);\n  }\n\n  onFinalize(...args) {\n    return this.props.onFinalize(...args);\n  }\n\n  // DEPRECATED/REMOVED METHODS\n\n  getHTMLControlValue(id, defaultValue = 1) {\n    const element = document.getElementById(id);\n    return element ? Number(element.value) : defaultValue;\n  }\n\n  // Update parameters\n  setViewParameters() {\n    log.removed('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _setupFrame() {\n    if (this._onSetupFrame) {\n      // call callback\n      this._onSetupFrame(this.animationProps);\n      // end callback\n    } else {\n      this._resizeCanvasDrawingBuffer();\n      this._resizeViewport();\n      this._resizeFramebuffer();\n    }\n  }\n\n  /**\n   * @private\n   * Handles a render loop frame - updates context and calls the application\n   * callback\n   */\n  _renderFrame() {\n    if (this._stopped) {\n      return;\n    }\n\n    this._setupFrame();\n    this._updateCallbackData();\n\n    // call callback\n    this.onRender(this.animationProps);\n    // end callback\n\n    if (this.offScreen) {\n      // commit returns a Promise\n      this.gl.commit().then(this._renderFrame);\n    } else {\n      // Request another render frame (now )\n      this._animationFrameId = requestAnimationFrame(this._renderFrame);\n    }\n  }\n\n  // Initialize the  object that will be passed to app callbacks\n  _initializeCallbackData() {\n    this.animationProps = {\n      gl: this.gl,\n\n      stop: this.stop,\n      canvas: this.gl.canvas,\n      framebuffer: this.framebuffer,\n\n      // Initial values\n      useDevicePixels: this.useDevicePixels,\n      needsRedraw: null,\n\n      // Animation props\n      startTime: Date.now(),\n      time: 0,\n      tick: 0,\n      tock: 0,\n      // canvas\n\n      // Experimental\n      _loop: this,\n      _animationLoop: this\n    };\n  }\n\n  // Update the context object that will be passed to app callbacks\n  _updateCallbackData() {\n    // Update redraw reason\n    this.animationProps.needsRedraw = this.needsRedraw;\n    this.needsRedraw = null;\n\n    // CallbackData width and height represent drawing buffer width and height\n    const width = this.gl.drawingBufferWidth;\n    const height = this.gl.drawingBufferHeight;\n    if (width !== this.animationProps.width || height !== this.animationProps.height) {\n      this.setNeedsRedraw('drawing buffer resized');\n    }\n\n    this.animationProps.width = width;\n    this.animationProps.height = height;\n    this.animationProps.aspect = height > 0 ? width / height : 1;\n    this.animationProps.needsRedraw = this.needsRedraw;\n\n    // Increment tick\n    this.animationProps.time = Date.now() - this.animationProps.startTime;\n    this.animationProps.tick++;\n    this.animationProps.tock = Math.floor(this.animationProps.time / 1000 * 60);\n\n    // experimental\n    this.animationProps._offScreen = this.offScreen;\n  }\n\n  _finalizeCallbackData() {\n    // call callback\n    this.onFinalize(this.animationProps);\n    // end callback\n  }\n\n  // Add application's data to the app context object\n  _addCallbackData(appContext) {\n    if (typeof appContext === 'object' && appContext !== null) {\n      this.animationProps = Object.assign({}, this.animationProps, appContext);\n    }\n  }\n\n  // Either uses supplied or existing context, or calls provided callback to create one\n  _createWebGLContext(opts) {\n    // Create the WebGL context if necessary\n    opts = Object.assign({}, opts, DEFAULT_GL_OPTIONS, this.props.glOptions);\n    this.gl = this.props.gl || this.onCreateContext(opts);\n\n    if (!isWebGL(this.gl)) {\n      throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n    }\n\n    if (this.props.debug) {\n      this.gl = makeDebugContext(this.gl);\n    }\n\n    // Reset the WebGL context.\n    resetParameters(this.gl);\n\n    this._createInfoDiv();\n  }\n\n  _createInfoDiv() {\n    if (this.gl.canvas && this.props.onAddHTML) {\n      /* global document */\n      const wrapperDiv = document.createElement('div');\n      document.body.appendChild(wrapperDiv);\n      wrapperDiv.style.position = 'relative';\n      const div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '10px';\n      div.style.bottom = '10px';\n      div.style.width = '300px';\n      div.style.background = 'white';\n      wrapperDiv.appendChild(this.gl.canvas);\n      wrapperDiv.appendChild(div);\n      const html = this.props.onAddHTML(div);\n      if (html) {\n        div.innerHTML = html;\n      }\n    }\n  }\n\n  // Default viewport setup\n  _resizeViewport() {\n    if (this.autoResizeViewport) {\n      this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    }\n  }\n\n  // Resize the render buffer of the canvas to match canvas client size\n  // Optionally multiplying with devicePixel ratio\n  _resizeCanvasDrawingBuffer() {\n    if (this.autoResizeDrawingBuffer) {\n      resizeGLContext(this.gl, {useDevicePixels: this.useDevicePixels});\n    }\n  }\n\n  // TBD - deprecated?\n  _createFramebuffer() {\n    // Setup default framebuffer\n    if (this.props.createFramebuffer) {\n      this.framebuffer = new Framebuffer(this.gl);\n    }\n  }\n\n  _resizeFramebuffer() {\n    if (this.framebuffer) {\n      this.framebuffer.resize({\n        width: this.gl.drawingBufferWidth,\n        height: this.gl.drawingBufferHeight\n      });\n    }\n  }\n}\n"],"file":"animation-loop.js"}