{"version":3,"sources":["../../../../../src/shadertools/test/lib/transpile-shader.spec.js"],"names":["VS_GLSL_300","VS_GLSL_100","FS_GLSL_300","FS_GLSL_100","t","ok","transpileShader","undefined","end","assembleResult","equal"],"mappings":";;AACA;;AACA;;;;AAFA;AAIA,IAAMA,qMAAN;AAcA,IAAMC,gNAAN;AAcA,IAAMC,gMAAN;AAeA,IAAMC,qMAAN;AAeA,wBAAK,wBAAL,EAA+B,aAAK;AAClCC,IAAEC,EAAF,CAAKC,6BAAoBC,SAAzB,EAAoC,mCAApC;AACAH,IAAEI,GAAF;AACD,CAHD;AAKA,wBAAK,0BAAL,EAAiC,aAAK;AACpC,MAAIC,cAAJ;AAEAA,mBAAiB,8BAAgBT,WAAhB,EAA6B,GAA7B,EAAkC,IAAlC,CAAjB;AACAI,IAAEM,KAAF,CAAQD,cAAR,EAAwBR,WAAxB,EAAqC,sBAArC;AAEAQ,mBAAiB,8BAAgBP,WAAhB,EAA6B,GAA7B,EAAkC,KAAlC,CAAjB;AACAE,IAAEM,KAAF,CAAQD,cAAR,EAAwBN,WAAxB,EAAqC,sBAArC;AAEAM,mBAAiB,8BAAgBR,WAAhB,EAA6B,GAA7B,EAAkC,IAAlC,CAAjB;AACAG,IAAEM,KAAF,CAAQD,cAAR,EAAwBT,WAAxB,EAAqC,sBAArC;AAEAS,mBAAiB,8BAAgBN,WAAhB,EAA6B,GAA7B,EAAkC,KAAlC,CAAjB;AACAC,IAAEM,KAAF,CAAQD,cAAR,EAAwBP,WAAxB,EAAqC,sBAArC;AAEAE,IAAEI,GAAF;AACD,CAhBD","sourcesContent":["/* eslint-disable camelcase */\nimport transpileShader from 'luma.gl/shadertools/src/lib/transpile-shader';\nimport test from 'tape-catch';\n\nconst VS_GLSL_300 = `\\\n#version 300 es\n\nin vec4 positions;\nout vec4 vColor;\n\nvoid f(out float a, in float b) {}\n\nvoid main(void) {\n  gl_Position = positions;\n  vColor = vec4(1., 0., 0., 1.);\n}\n`;\n\nconst VS_GLSL_100 = `\\\n#version 300 es\n\nattribute vec4 positions;\nvarying vec4 vColor;\n\nvoid f(out float a, in float b) {}\n\nvoid main(void) {\n  gl_Position = positions;\n  vColor = vec4(1., 0., 0., 1.);\n}\n`;\n\nconst FS_GLSL_300 = `\\\n#version 300 es\n\nprecision highp float;\n\nout vec4 fragmentColor;\nin vec4 vColor;\n\nvoid f(out float a, in float b) {}\n\nvoid main(void) {\n  fragmentColor = vColor;\n}\n`;\n\nconst FS_GLSL_100 = `\\\n#version 300 es\n\nprecision highp float;\n\nout vec4 fragmentColor;\nvarying vec4 vColor;\n\nvoid f(out float a, in float b) {}\n\nvoid main(void) {\n  fragmentColor = vColor;\n}\n`;\n\ntest('transpileShader#import', t => {\n  t.ok(transpileShader !== undefined, 'transpileShader import successful');\n  t.end();\n});\n\ntest('transpileShader#versions', t => {\n  let assembleResult;\n\n  assembleResult = transpileShader(VS_GLSL_300, 100, true);\n  t.equal(assembleResult, VS_GLSL_100, 'correctly transpiled');\n\n  assembleResult = transpileShader(FS_GLSL_300, 100, false);\n  t.equal(assembleResult, FS_GLSL_100, 'correctly transpiled');\n\n  assembleResult = transpileShader(VS_GLSL_100, 300, true);\n  t.equal(assembleResult, VS_GLSL_300, 'correctly transpiled');\n\n  assembleResult = transpileShader(FS_GLSL_100, 300, false);\n  t.equal(assembleResult, FS_GLSL_300, 'correctly transpiled');\n\n  t.end();\n});\n"],"file":"transpile-shader.spec.js"}