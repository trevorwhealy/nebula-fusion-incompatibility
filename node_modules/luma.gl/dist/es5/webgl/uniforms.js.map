{"version":3,"sources":["../../../src/webgl/uniforms.js"],"names":["UNIFORM_SETTERS","GL","FLOAT","gl","location","value","uniform1fv","toFloatArray","FLOAT_VEC2","uniform2fv","FLOAT_VEC3","uniform3fv","FLOAT_VEC4","uniform4fv","INT","uniform1iv","toIntArray","INT_VEC2","uniform2iv","INT_VEC3","uniform3iv","INT_VEC4","uniform4iv","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","SAMPLER_2D","uniform1i","SAMPLER_CUBE","UNSIGNED_INT","uniform1uiv","toUIntArray","UNSIGNED_INT_VEC2","uniform2uiv","UNSIGNED_INT_VEC3","uniform3uiv","UNSIGNED_INT_VEC4","uniform4uiv","FLOAT_MAT2x3","uniformMatrix2x3fv","FLOAT_MAT2x4","uniformMatrix2x4fv","FLOAT_MAT3x2","uniformMatrix3x2fv","FLOAT_MAT3x4","uniformMatrix3x4fv","FLOAT_MAT4x2","uniformMatrix4x2fv","FLOAT_MAT4x3","uniformMatrix4x3fv","SAMPLER_3D","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","FLOAT_ARRAY","INT_ARRAY","UINT_ARRAY","array1","toTypedArray","uniformLength","Type","cache","Number","isFinite","length","log","warn","result","i","Float32Array","Int32Array","Uint32Array","parseUniformName","name","UNIFORM_NAME_REGEXP","matches","match","Error","isArray","Boolean","getUniformSetter","info","setter","type","bind","checkUniformValues","uniforms","source","uniformName","checkUniformValue","console","error","Array","ArrayBuffer","isView","checkUniformArray","Texture","Sampler","Renderbuffer","Framebuffer","texture","checkLength","Math","min","areUniformsEqual","uniform1","uniform2","len","getUniformsTable","header","program","undefinedOnly","SHADER_MODULE_UNIFORM_REGEXP","PROJECT_MODULE_UNIFORM_REGEXP","uniformLocations","_uniformSetters","table","uniformNames","Object","keys","sort","count","addUniformToTable","unusedCount","unusedTable","uniform","isDefined","isUniformDefined","undefined"],"mappings":"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","sourcesContent":["import Framebuffer from './framebuffer';\nimport Renderbuffer from './renderbuffer';\nimport Texture from './texture';\nimport Sampler from './sampler';\nimport {formatValue, log} from '../utils';\nimport assert from '../utils/assert';\nimport GL from '../constants';\n\nconst UNIFORM_SETTERS = {\n\n  // WEBGL1\n\n  /* eslint-disable max-len */\n  [GL.FLOAT]: (gl, location, value) => gl.uniform1fv(location, toFloatArray(value, 1)),\n  [GL.FLOAT_VEC2]: (gl, location, value) => gl.uniform2fv(location, toFloatArray(value, 2)),\n  [GL.FLOAT_VEC3]: (gl, location, value) => gl.uniform3fv(location, toFloatArray(value, 3)),\n  [GL.FLOAT_VEC4]: (gl, location, value) => gl.uniform4fv(location, toFloatArray(value, 4)),\n\n  [GL.INT]: (gl, location, value) => gl.uniform1iv(location, toIntArray(value, 1)),\n  [GL.INT_VEC2]: (gl, location, value) => gl.uniform2iv(location, toIntArray(value, 2)),\n  [GL.INT_VEC3]: (gl, location, value) => gl.uniform3iv(location, toIntArray(value, 3)),\n  [GL.INT_VEC4]: (gl, location, value) => gl.uniform4iv(location, toIntArray(value, 4)),\n\n  [GL.BOOL]: (gl, location, value) => gl.uniform1iv(location, toIntArray(value, 1)),\n\n  [GL.BOOL_VEC2]: (gl, location, value) => gl.uniform2iv(location, toIntArray(value, 2)),\n  [GL.BOOL_VEC3]: (gl, location, value) => gl.uniform3iv(location, toIntArray(value, 3)),\n  [GL.BOOL_VEC4]: (gl, location, value) => gl.uniform4iv(location, toIntArray(value, 4)),\n\n  // uniformMatrix(false): don't transpose the matrix\n  [GL.FLOAT_MAT2]: (gl, location, value) => gl.uniformMatrix2fv(location, false, toFloatArray(value, 4)),\n  [GL.FLOAT_MAT3]: (gl, location, value) => gl.uniformMatrix3fv(location, false, toFloatArray(value, 9)),\n  [GL.FLOAT_MAT4]: (gl, location, value) => gl.uniformMatrix4fv(location, false, toFloatArray(value, 16)),\n\n  [GL.SAMPLER_2D]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.SAMPLER_CUBE]: (gl, location, value) => gl.uniform1i(location, value),\n\n  // WEBGL2 - unsigned integers, irregular matrices, additional texture samplers\n\n  [GL.UNSIGNED_INT]: (gl, location, value) => gl.uniform1uiv(location, toUIntArray(value, 1)),\n  [GL.UNSIGNED_INT_VEC2]: (gl, location, value) => gl.uniform2uiv(location, toUIntArray(value, 2)),\n  [GL.UNSIGNED_INT_VEC3]: (gl, location, value) => gl.uniform3uiv(location, toUIntArray(value, 3)),\n  [GL.UNSIGNED_INT_VEC4]: (gl, location, value) => gl.uniform4uiv(location, toUIntArray(value, 4)),\n\n  // uniformMatrix(false): don't transpose the matrix\n  [GL.FLOAT_MAT2x3]: (gl, location, value) => gl.uniformMatrix2x3fv(location, false, toFloatArray(value, 6)),\n  [GL.FLOAT_MAT2x4]: (gl, location, value) => gl.uniformMatrix2x4fv(location, false, toFloatArray(value, 8)),\n  [GL.FLOAT_MAT3x2]: (gl, location, value) => gl.uniformMatrix3x2fv(location, false, toFloatArray(value, 6)),\n  [GL.FLOAT_MAT3x4]: (gl, location, value) => gl.uniformMatrix3x4fv(location, false, toFloatArray(value, 12)),\n  [GL.FLOAT_MAT4x2]: (gl, location, value) => gl.uniformMatrix4x2fv(location, false, toFloatArray(value, 8)),\n  [GL.FLOAT_MAT4x3]: (gl, location, value) => gl.uniformMatrix4x3fv(location, false, toFloatArray(value, 12)),\n\n  [GL.SAMPLER_3D]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.SAMPLER_2D_SHADOW]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.SAMPLER_2D_ARRAY]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.SAMPLER_2D_ARRAY_SHADOW]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.SAMPLER_CUBE_SHADOW]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.INT_SAMPLER_2D]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.INT_SAMPLER_3D]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.INT_SAMPLER_CUBE]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.INT_SAMPLER_2D_ARRAY]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.UNSIGNED_INT_SAMPLER_2D]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.UNSIGNED_INT_SAMPLER_3D]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.UNSIGNED_INT_SAMPLER_CUBE]: (gl, location, value) => gl.uniform1i(location, value),\n  [GL.UNSIGNED_INT_SAMPLER_2D_ARRAY]: (gl, location, value) => gl.uniform1i(location, value)\n  /* eslint-enable max-len */\n};\n\n// Pre-allocated typed arrays for temporary conversion\nconst FLOAT_ARRAY = {};\nconst INT_ARRAY = {};\nconst UINT_ARRAY = {};\n\nconst array1 = [0];\n\n// Functions to ensure the type of uniform values\n// TODO - Why is this necessary? The uniform*v funtions can consume Arrays\nfunction toTypedArray(value, uniformLength, Type, cache) {\n  // convert boolean uniforms to Number\n  if (uniformLength === 1 && typeof value === 'boolean') {\n    value = value ? 1 : 0;\n  }\n  if (Number.isFinite(value)) {\n    array1[0] = value;\n    value = array1;\n  }\n  const length = value.length;\n  if (length % uniformLength) {\n    log.warn(`Uniform size should be multiples of ${uniformLength}`, value)();\n  }\n\n  if (value instanceof Type) {\n    return value;\n  }\n  let result = cache[length];\n  if (!result) {\n    result = new Type(length);\n    cache[length] = result;\n  }\n  for (let i = 0; i < length; i++) {\n    result[i] = value[i];\n  }\n  return result;\n}\n\nfunction toFloatArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Float32Array, FLOAT_ARRAY);\n}\n\nfunction toIntArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Int32Array, INT_ARRAY);\n}\n\nfunction toUIntArray(value, uniformLength) {\n  return toTypedArray(value, uniformLength, Uint32Array, UINT_ARRAY);\n}\n\nexport function parseUniformName(name) {\n  // name = name[name.length - 1] === ']' ?\n  // name.substr(0, name.length - 3) : name;\n\n  // if array name then clean the array brackets\n  const UNIFORM_NAME_REGEXP = /([^\\[]*)(\\[[0-9]+\\])?/;\n  const matches = name.match(UNIFORM_NAME_REGEXP);\n  if (!matches || matches.length < 2) {\n    throw new Error(`Failed to parse GLSL uniform name ${name}`);\n  }\n\n  return {\n    name: matches[1],\n    length: matches[2] || 1,\n    isArray: Boolean(matches[2])\n  };\n}\n\n// Returns a Magic Uniform Setter\n/* eslint-disable complexity */\nexport function getUniformSetter(gl, location, info) {\n  const setter = UNIFORM_SETTERS[info.type];\n  if (!setter) {\n    throw new Error(`Unknown GLSL uniform type ${info.type}`);\n  }\n  return setter.bind(null, gl, location);\n}\n\n// Basic checks of uniform values without knowledge of program\n// To facilitate early detection of e.g. undefined values in JavaScript\nexport function checkUniformValues(uniforms, source) {\n  for (const uniformName in uniforms) {\n    const value = uniforms[uniformName];\n    if (!checkUniformValue(value)) {\n      // Add space to source\n      source = source ? `${source} ` : '';\n      // Value could be unprintable so write the object on console\n      console.error(`${source} Bad uniform ${uniformName}`, value); // eslint-disable-line\n      /* eslint-enable no-console */\n      throw new Error(`${source} Bad uniform ${uniformName}`);\n    }\n  }\n  return true;\n}\n\n// TODO use type information during validation\nfunction checkUniformValue(value) {\n  if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n    return checkUniformArray(value);\n  }\n\n  // Check if single value is a number\n  if (isFinite(value)) {\n    return true;\n  } else if (value === true || value === false) {\n    return true;\n  } else if (value instanceof Texture || value instanceof Sampler) {\n    return true;\n  } else if (value instanceof Renderbuffer) {\n    return true;\n  } else if (value instanceof Framebuffer) {\n    return Boolean(value.texture);\n  }\n  return false;\n}\n\nfunction checkUniformArray(value) {\n  // Check that every element in array is a number, and at least 1 element\n  if (value.length === 0) {\n    return false;\n  }\n\n  const checkLength = Math.min(value.length, 16);\n\n  for (let i = 0; i < checkLength; ++i) {\n    if (!Number.isFinite(value[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Given two values of a uniform, returns `true` if they are equal\n */\nexport function areUniformsEqual(uniform1, uniform2) {\n  if (Array.isArray(uniform1) || ArrayBuffer.isView(uniform1)) {\n    if (!uniform2) {\n      return false;\n    }\n    const len = uniform1.length;\n    if (uniform2.length !== len) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (uniform1[i] !== uniform2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return uniform1 === uniform2;\n}\n\n// Prepares a table suitable for console.table\n/* eslint-disable max-statements */\nexport function getUniformsTable({\n  header = 'Uniforms',\n  program,\n  uniforms,\n  undefinedOnly = false\n} = {}) {\n  assert(program);\n\n  const SHADER_MODULE_UNIFORM_REGEXP = '.*_.*';\n  const PROJECT_MODULE_UNIFORM_REGEXP = '.*Matrix'; // TODO - Use explicit list\n\n  const uniformLocations = program._uniformSetters;\n  const table = {}; // {[header]: {}};\n\n  // Add program's provided uniforms (in alphabetical order)\n  const uniformNames = Object.keys(uniformLocations).sort();\n\n  let count = 0;\n\n  // First add non-underscored uniforms (assumed not coming from shader modules)\n  for (const uniformName of uniformNames) {\n    if (!uniformName.match(SHADER_MODULE_UNIFORM_REGEXP) &&\n      !uniformName.match(PROJECT_MODULE_UNIFORM_REGEXP)) {\n      if (addUniformToTable({table, header, uniforms, uniformName, undefinedOnly})) {\n        count++;\n      }\n    }\n  }\n\n  // add underscored uniforms (assumed from shader modules)\n  for (const uniformName of uniformNames) {\n    if (uniformName.match(PROJECT_MODULE_UNIFORM_REGEXP)) {\n      if (addUniformToTable({table, header, uniforms, uniformName, undefinedOnly})) {\n        count++;\n      }\n    }\n  }\n\n  for (const uniformName of uniformNames) {\n    if (!table[uniformName]) {\n      if (addUniformToTable({table, header, uniforms, uniformName, undefinedOnly})) {\n        count++;\n      }\n    }\n  }\n\n  // Create a table of unused uniforms\n  let unusedCount = 0;\n  const unusedTable = {};\n  if (!undefinedOnly) {\n    for (const uniformName in uniforms) {\n      const uniform = uniforms[uniformName];\n      if (!table[uniformName]) {\n        unusedCount++;\n        unusedTable[uniformName] = {\n          Type: `NOT USED: ${uniform}`,\n          [header]: formatValue(uniform)\n        };\n      }\n    }\n  }\n\n  return {table, count, unusedTable, unusedCount};\n}\n\n// Helper\nfunction addUniformToTable({table, header, uniforms, uniformName, undefinedOnly}) {\n  const value = uniforms[uniformName];\n  const isDefined = isUniformDefined(value);\n  if (!undefinedOnly || !isDefined) {\n    table[uniformName] = {\n      // Add program's unprovided uniforms\n      [header]: isDefined ? formatValue(value) : 'N/A',\n      'Uniform Type': isDefined ? value : 'NOT PROVIDED'\n    };\n    return true;\n  }\n  return false;\n}\n\nfunction isUniformDefined(value) {\n  return value !== undefined && value !== null;\n}\n"],"file":"uniforms.js"}