{"version":3,"sources":["../../../src/webgl/vertex-array.js"],"names":["OES_vertex_array_object","GL_ELEMENT_ARRAY_BUFFER","ERR_WEBGL1","ERR_ELEMENTS","ERR_ATTRIBUTE_TYPE","VertexArray","gl","getExtension","luma","defaultVertexArray","handle","MAX_VERTEX_ATTRIBS","getParameter","opts","isSupported","Error","id","program","Object","assign","configuration","elements","values","infos","accessors","unused","drawParams","unbindBuffer","stubRemovedMethods","_initialize","seal","delete","props","bindOnUse","setAttributes","attributes","setElements","clear","disableZero","_unbindBuffers","bind","bindBuffer","ELEMENT_ARRAY_BUFFER","i","MAX_ATTRIBUTES","setConstant","Array","fill","isInstanced","isIndexed","indexType","locationOrName","value","isArray","length","Buffer","buffer","accessor","setBuffer","ArrayBuffer","isView","elementBuffer","target","Boolean","getOptions","type","location","_getAttributeIndex","log","once","accessInfo","_getAttributeInfo","name","String","Accessor","size","stride","offset","normalized","divisor","Number","isFinite","ARRAY_BUFFER","integer","vertexAttribPointer","vertexAttribIPointer","enableVertexAttribArray","vertexAttribDivisor","arrayValue","warn","Float32Array","_setConstant","disableVertexAttribArray","attributeName","getAttributeInfo","getLocation","reset","setProps","array","constructor","_setConstantFloatArray","Int32Array","_setConstantIntArray","Uint32Array","_setConstantUintArray","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttribI1iv","vertexAttribI2iv","vertexAttribI3iv","vertexAttribI4iv","vertexAttribI1uiv","vertexAttribI2uiv","vertexAttribI3uiv","vertexAttribI4uiv","FLOAT","constant","createVertexArray","error","deleteVertexArray","bindVertexArray","_setConstantAttributes","pname","GL","VERTEX_ATTRIB_ARRAY_POINTER","getVertexAttribOffset","getVertexAttrib","header","table","_getDebugTableRow","info","rowHeader","typeAndName","attribute","verts","bytes","isInteger","marker","replace","indexOf","getDebugData","data","modified","BYTES_PER_ELEMENT","format","instanced","getMaxAttributes","Resource"],"mappings":"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","sourcesContent":["// WebGL2 VertexArrayObject class (polyfilled/extended in WebGL1)\nimport GL from '../constants';\nimport Resource from './resource';\nimport Accessor from './accessor';\nimport Buffer from './buffer';\nimport {isWebGL2} from '../webgl-utils';\nimport {glKey} from '../webgl-utils/constants-to-keys';\nimport {getCompositeGLType} from '../webgl-utils/attribute-utils';\nimport {log, formatValue, assert} from '../utils';\n\n/* eslint-disable camelcase */\nconst OES_vertex_array_object = 'OES_vertex_array_object';\n\nconst GL_ELEMENT_ARRAY_BUFFER = 0x8893;\n\nconst ERR_WEBGL1 = 'Only WebGL2 contexts are supported by default. \\\nTo enable support for  older browsers, import \"luma.gl/webgl1\"';\nconst ERR_ELEMENTS = 'elements must be GL.ELEMENT_ARRAY_BUFFER';\nconst ERR_ATTRIBUTE_TYPE = 'VertexArray: attributes must be Buffer or typed array constant';\n\nexport default class VertexArray extends Resource {\n\n  // Not correct if webgl1 polyfills not installed\n  static isSupported(gl) {\n    return isWebGL2(gl) || gl.getExtension(OES_vertex_array_object);\n  }\n\n  // Returns the global (null) vertex array object. Exists even when no extension available\n  static getDefaultArray(gl) {\n    gl.luma = gl.luma || {};\n    if (!gl.luma.defaultVertexArray) {\n      gl.luma.defaultVertexArray = new VertexArray(gl, {handle: null});\n    }\n    return gl.luma.defaultVertexArray;\n  }\n\n  static getMaxAttributes(gl) {\n    VertexArray.MAX_VERTEX_ATTRIBS = VertexArray.MAX_VERTEX_ATTRIBS ||\n      gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    return VertexArray.MAX_VERTEX_ATTRIBS;\n  }\n\n  // Create a VertexArray\n  constructor(gl, opts = {}) {\n    if (opts.handle && !VertexArray.isSupported(gl)) {\n      throw new Error(ERR_WEBGL1);\n    }\n\n    // Use program's id if program but no id is supplied\n    const id = opts.id || opts.program && opts.program.id;\n    super(gl, Object.assign({}, opts, {id}));\n\n    this.configuration = null;\n\n    // Extracted information\n    this.elements = null;\n    this.values = null;\n    this.infos = null;\n    this.accessors = null;\n    this.unused = null;\n    this.drawParams = null;\n    this.unbindBuffer = null; // Created when unbinding buffers\n\n    this.stubRemovedMethods('VertexArray', 'v6.0', [\n      'setBuffers',\n      'setGeneric',\n      'clearBindings',\n      'setLocations',\n      'setGenericValues',\n      'setDivisor',\n      'enable',\n      'disable'\n    ]);\n\n    this._initialize(opts);\n    Object.seal(this);\n  }\n\n  delete() {\n    super.delete();\n    if (this.unbindBuffer) {\n      this.unbindBuffer.delete();\n    }\n  }\n\n  get MAX_ATTRIBUTES() {\n    return VertexArray.getMaxAttributes(this.gl);\n  }\n\n  setProps(props) {\n    if ('program' in props) {\n      this.configuration = props.program && props.program.configuration;\n    }\n    if ('configuration' in props) {\n      this.configuration = props.configuration;\n    }\n    if ('bindOnUse' in props) {\n      props = props.bindOnUse;\n    }\n    if ('attributes' in props) {\n      this.setAttributes(props.attributes);\n    }\n    if ('elements' in props) {\n      this.setElements(props.elements);\n    }\n    return this;\n  }\n\n  // Resets all attributes (to default valued constants)\n  reset(clear = true, disableZero = true) {\n    if (clear) {\n      this._unbindBuffers();\n      this.bind(() => {\n        // Clear elements buffer\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n        for (let i = 0; i < this.MAX_ATTRIBUTES; i++) {\n          if (i > 0 || disableZero) {\n            this.setConstant(i, [0, 0, 0, 1]); // match assumed WebGL defaults\n          }\n        }\n      });\n    }\n\n    this.elements = null;\n    this.values = new Array(this.MAX_VERTEX_ATTRIBS).fill(null);\n    this.infos = new Array(this.MAX_VERTEX_ATTRIBS).fill({});\n    this.accessors = new Array(this.MAX_VERTEX_ATTRIBS).fill(null);\n    this.unused = [];\n\n    // Auto detects draw params\n    this.drawParams = {\n      isInstanced: false,\n      // indexing is autodetected - buffer with target gl.ELEMENT_ARRAY_BUFFER\n      // index type is saved for drawElement calls\n      isIndexed: false,\n      indexType: null\n    };\n\n    return this;\n  }\n\n  // Set (bind) an array or map of vertex array buffers, either in numbered or named locations.\n  // For names that are not present in `location`, the supplied buffers will be ignored.\n  // if a single buffer of type GL.ELEMENT_ARRAY_BUFFER is present, it will be set as elements\n  setAttributes(attributes) {\n    this.bind(() => {\n      for (const locationOrName in attributes) {\n        const value = attributes[locationOrName];\n        if (Array.isArray(value) && value.length && value[0] instanceof Buffer) {\n          const buffer = value[0];\n          const accessor = value[1];\n          this.setBuffer(locationOrName, buffer, accessor);\n        } else if (value instanceof Buffer) {\n          this.setBuffer(locationOrName, value);\n        } else if (ArrayBuffer.isView(value) || Array.isArray(value)) {\n          this.setConstant(locationOrName, value);\n        } else {\n          throw new Error(ERR_ATTRIBUTE_TYPE);\n        }\n      }\n    });\n\n    return this;\n  }\n\n  // Set (bind) an elements buffer, for indexed rendering.\n  // Must be a Buffer bound to GL.ELEMENT_ARRAY_BUFFER. Constants not supported\n  setElements(elementBuffer = null, opts = {}) {\n    assert(!elementBuffer || elementBuffer.target === GL_ELEMENT_ARRAY_BUFFER, ERR_ELEMENTS);\n\n    this.bind(() => {\n      this.gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER, elementBuffer ? elementBuffer.handle : null);\n    });\n    this.elements = elementBuffer;\n\n    // Auto-deduce isIndexed draw param\n    this.drawParams.isIndexed = Boolean(elementBuffer);\n    if (elementBuffer) {\n      this.drawParams.indexType = elementBuffer.accessor.getOptions(opts).type;\n    } else {\n      delete this.drawParams.indexType;\n    }\n\n    return this;\n  }\n\n  // Set a location in vertex attributes array to a buffer\n  setBuffer(locationOrName, buffer, opts = {}) {\n    const {gl} = this;\n\n    // Check target\n    if (buffer.target === gl.ELEMENT_ARRAY_BUFFER) {\n      return this.setElements(buffer);\n    }\n\n    const location = this._getAttributeIndex(locationOrName);\n    if (location < 0) {\n      this.unused[locationOrName] = buffer;\n      log.once(3, () => `unused buffer attribute ${locationOrName} in ${this.id}`)();\n      return this;\n    }\n\n    this.bind(() => {\n      const accessInfo = this._getAttributeInfo(locationOrName, buffer, opts);\n      const name = accessInfo ? accessInfo.name : String(location);\n\n      // Override with any additional attribute configuration params\n      let accessor = accessInfo ? accessInfo.accessor : new Accessor();\n      accessor = accessor.getOptions(buffer, buffer.accessor, opts);\n\n      this.values[location] = buffer;\n      this.accessors[location] = accessor;\n      this.infos[location] = {location, name, accessor};\n\n      const {size, type, stride, offset, normalized, divisor} = accessor;\n      assert(Number.isFinite(size) && Number.isFinite(type));\n\n      // A non-zero buffer object must be bound to the GL_ARRAY_BUFFER target\n      buffer.bind({target: gl.ARRAY_BUFFER});\n\n      // Attach ARRAY_BUFFER with specified buffer format to location\n      if (!opts.integer) {\n        gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n      } else {\n        // specifies *integer* data formats and locations of vertex attributes\n        assert(isWebGL2(gl));\n        gl.vertexAttribIPointer(location, size, type, stride, offset);\n      }\n      gl.enableVertexAttribArray(location);\n      gl.vertexAttribDivisor(location, divisor || 0);\n\n      // NOTE We don't unbind buffer here\n\n      // Auto deduce isInstanced drawParam\n      const isInstanced = divisor > 0;\n      this.drawParams.isInstanced = this.drawParams.isInstanced || isInstanced;\n    });\n\n    return this;\n  }\n\n  // Set attribute to constant value (small typed array corresponding to one vertex' worth of data)\n  // TODO - handle single values for size 1 attributes?\n  // TODO - convert classic arrays based on known type?\n  setConstant(locationOrName, arrayValue, opts) {\n    const accessInfo = this._getAttributeInfo(locationOrName, arrayValue, opts);\n    if (!accessInfo) {\n      this.unused[locationOrName] = arrayValue;\n      log.warn(() => `${this.id} unused constant attribute ${locationOrName}`)();\n      return this;\n    }\n\n    // TODO - read type if provided\n    if (Array.isArray(arrayValue)) {\n      arrayValue = new Float32Array(arrayValue);\n    }\n\n    this.bind(() => {\n      const {location} = accessInfo;\n\n      this._setConstant(location, arrayValue);\n\n      // To use the constant value, disable reading from arrays\n\n      // NOTE: Possible perf penalty when disabling attribute 0:\n      // https://stackoverflow.com/questions/20305231/webgl-warning-attribute-0-is-disabled-\n      // this-has-significant-performance-penalt\n      this.gl.disableVertexAttribArray(location);\n\n      // Reset instanced divisor\n      this.gl.vertexAttribDivisor(location, 0);\n\n      // Save the value for debugging\n      this.values[location] = arrayValue;\n    });\n    return this;\n  }\n\n  // PRIVATE\n\n  _getAttributeInfo(attributeName) {\n    return this.configuration && this.configuration.getAttributeInfo(attributeName);\n  }\n\n  _getAttributeIndex(locationOrName) {\n    if (this.configuration) {\n      return this.configuration.getLocation(locationOrName);\n    }\n    const location = Number(locationOrName);\n    if (Number.isFinite(location)) {\n      return location;\n    }\n    return -1;\n  }\n\n  _initialize(props = {}) {\n    this.reset(false);\n    this.configuration = null;\n    this.bindOnUse = false;\n    return this.setProps(props);\n  }\n\n  // Note: Constants are stored on the WebGL context, not the VAO\n  // TODO - cache these to avoid setting them unnecessarily?\n  // TODO - use known type (in configuration or passed in) to allow non-typed arrays?\n  _setConstant(location, array) {\n    switch (array.constructor) {\n    case Float32Array:\n      this._setConstantFloatArray(location, array);\n      break;\n    case Int32Array:\n      this._setConstantIntArray(location, array);\n      break;\n    case Uint32Array:\n      this._setConstantUintArray(location, array);\n      break;\n    default:\n      assert(false);\n    }\n  }\n\n  _setConstantFloatArray(location, array) {\n    const {gl} = this;\n    switch (array.length) {\n    case 1: gl.vertexAttrib1fv(location, array); break;\n    case 2: gl.vertexAttrib2fv(location, array); break;\n    case 3: gl.vertexAttrib3fv(location, array); break;\n    case 4: gl.vertexAttrib4fv(location, array); break;\n    default: assert(false);\n    }\n  }\n\n  _setConstantIntArray(location, array) {\n    const {gl} = this;\n    assert(isWebGL2(gl));\n    switch (array.length) {\n    case 1: gl.vertexAttribI1iv(location, array); break;\n    case 2: gl.vertexAttribI2iv(location, array); break;\n    case 3: gl.vertexAttribI3iv(location, array); break;\n    case 4: gl.vertexAttribI4iv(location, array); break;\n    default: assert(false);\n    }\n  }\n\n  _setConstantUintArray(location, array) {\n    const {gl} = this;\n    assert(isWebGL2(gl));\n    switch (array.length) {\n    case 1: gl.vertexAttribI1uiv(location, array); break;\n    case 2: gl.vertexAttribI2uiv(location, array); break;\n    case 3: gl.vertexAttribI3uiv(location, array); break;\n    case 4: gl.vertexAttribI4uiv(location, array); break;\n    default: assert(false);\n    }\n  }\n\n  // Workaround for Chrome issue, unbind temporarily to avoid conflicting with TransformFeednack\n  unbindBuffers(disableZero = true) {\n    this.bind(() => {\n      // No clear way to set a buffer to null, so create a minimal \"dummy buffer\"\n      // Save it to avoid inflating buffer creation statistics\n      this.unbindBuffer = this.unbindBuffer || new Buffer(this.gl, {size: 4});\n\n      for (const location in this.values) {\n        if (this.values[location] instanceof Buffer) {\n          this.gl.disableVertexAttribArray(location);\n          this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.unbindBuffer.handle);\n          this.gl.vertexAttribPointer(location, 1, this.gl.FLOAT, false, 0, 0);\n        }\n      }\n    });\n  }\n\n  // Workaround for Chrome issue, rebind after temporary unbind\n  bindBuffers() {\n    this.bind(() => {\n      for (const location in this.values) {\n        const buffer = this.values[location];\n        if (buffer instanceof Buffer) {\n          this.setBuffer(location, buffer);\n        }\n      }\n    });\n  }\n\n  // Updates all constant attribute values (constants are used when vertex attributes are disabled).\n  // This needs to be done repeatedly since in contrast to buffer bindings,\n  // constants are stored on the WebGL context, not the VAO\n  _setConstantAttributes() {\n    for (const location in this.values) {\n      const constant = this.values[location];\n      if (ArrayBuffer.isView(constant)) {\n        this._setConstant(Number(location), constant);\n        this.gl.disableVertexAttribArray(Number(location));\n        this.gl.vertexAttribDivisor(Number(location), 0);\n      }\n    }\n  }\n\n  // RESOURCE IMPLEMENTATION\n\n  _createHandle() {\n    try {\n      return this.gl.createVertexArray();\n    } catch (error) {\n      log.error(ERR_WEBGL1)();\n      throw error;\n    }\n  }\n\n  _deleteHandle(handle) {\n    this.gl.deleteVertexArray(handle);\n    return [this.elements];\n    // return [this.elements, ...this.buffers];\n  }\n\n  _bindHandle(handle) {\n    this.gl.bindVertexArray(handle);\n    // Make sure that any constant attributes are updated (stored on the context, not the VAO)\n    if (handle === this.handle) {\n      this._setConstantAttributes();\n    }\n  }\n\n  // Generic getter for information about a vertex attribute at a given position\n  _getParameter(pname, {location}) {\n    assert(Number.isFinite(location));\n    return this.bind(() => {\n      switch (pname) {\n      case GL.VERTEX_ATTRIB_ARRAY_POINTER: return this.gl.getVertexAttribOffset(location, pname);\n      default: return this.gl.getVertexAttrib(location, pname);\n      }\n    });\n  }\n\n  _getDebugTable({header = 'Attributes'} = {}) {\n    if (!this.configuration) {\n      return {};\n    }\n\n    const table = {}; // {[header]: {}};\n\n    // Add index (elements) if available\n    if (this.elements) {\n      // const elements = Object.assign({size: 1}, this.elements);\n      table.ELEMENT_ARRAY_BUFFER =\n        this._getDebugTableRow(this.elements, null, header);\n    }\n\n    // Add used attributes\n    const attributes = this.values;\n\n    for (const attributeName in attributes) {\n      const info = this._getAttributeInfo(attributeName);\n      if (info) {\n        let rowHeader = `${attributeName}: ${info.name}`;\n        const accessor = this.accessors[info.location];\n        if (accessor) {\n          const typeAndName = getCompositeGLType(accessor.type, accessor.size);\n          if (typeAndName) { // eslint-disable-line\n            rowHeader = `${attributeName}: ${info.name} (${typeAndName.name})`;\n          }\n        }\n        table[rowHeader] =\n          this._getDebugTableRow(attributes[attributeName], accessor, header);\n      }\n    }\n\n    return table;\n  }\n\n  /* eslint-disable max-statements */\n  _getDebugTableRow(attribute, accessor, header) {\n    const {gl} = this;\n    // const round = xnum => Math.round(num * 10) / 10;\n\n    let type = 'NOT PROVIDED';\n    let size = 'N/A';\n    let verts = 'N/A';\n    let bytes = 'N/A';\n\n    let isInteger;\n    let marker;\n    let value;\n\n    if (accessor) {\n      type = accessor.type;\n      size = accessor.size;\n\n      // Generate a type name by dropping Array from Float32Array etc.\n      type = String(type).replace('Array', '');\n\n      // Look for 'nt' to detect integer types, e.g. Int32Array, Uint32Array\n      isInteger = type.indexOf('nt') !== -1;\n    }\n\n    if (attribute instanceof Buffer) {\n      const buffer = attribute;\n\n      const {data, modified} = buffer.getDebugData();\n      marker = modified ? '*' : '';\n\n      value = data;\n      bytes = buffer.bytes;\n      verts = bytes / data.BYTES_PER_ELEMENT / size;\n\n      let format;\n\n      if (accessor) {\n        const instanced = accessor.divisor > 0;\n        format = `${instanced ? 'I ' : 'P '} ${verts} (x${size}=${bytes} bytes ${glKey(gl, type)})`;\n      } else {\n        // element buffer\n        isInteger = true;\n        format = `${bytes} bytes`;\n      }\n\n      return {\n        [header]: `${marker}${formatValue(value, {size, isInteger})}`,\n        'Format ': format\n      };\n    }\n\n    // CONSTANT VALUE\n    value = attribute;\n    size = attribute.length;\n    // Generate a type name by dropping Array from Float32Array etc.\n    type = String(attribute.constructor.name).replace('Array', '');\n    // Look for 'nt' to detect integer types, e.g. Int32Array, Uint32Array\n    isInteger = type.indexOf('nt') !== -1;\n\n    return {\n      [header]: `${formatValue(value, {size, isInteger})} (constant)`,\n      'Format ': `${size}x${type} (constant)`\n    };\n\n  }\n  /* eslint-ensable max-statements */\n}\n"],"file":"vertex-array.js"}