{"version":3,"sources":["../../../src/core/animation-loop.js"],"names":["DEFAULT_GL_OPTIONS","preserveDrawingBuffer","AnimationLoop","props","onCreateContext","opts","onAddHTML","onInitialize","onRender","onFinalize","offScreen","gl","glOptions","debug","createFramebuffer","autoResizeViewport","autoResizeDrawingBuffer","useDevicePixels","log","deprecated","useDevicePixelRatio","needsRedraw","setProps","start","bind","stop","_renderFrame","reason","_stopped","_animationFrameId","_startPromise","pageLoadPromise","then","_createWebGLContext","_createFramebuffer","_initializeCallbackData","_updateCallbackData","_resizeCanvasDrawingBuffer","_resizeViewport","animationProps","_addCallbackData","appContext","_finalizeCallbackData","id","defaultValue","element","document","getElementById","Number","value","removed","_onSetupFrame","_resizeFramebuffer","_setupFrame","commit","canvas","framebuffer","startTime","Date","now","time","tick","tock","_loop","_animationLoop","width","drawingBufferWidth","height","drawingBufferHeight","setNeedsRedraw","aspect","Math","floor","_offScreen","Object","assign","Error","_createInfoDiv","wrapperDiv","createElement","body","appendChild","style","position","div","left","bottom","background","html","innerHTML","viewport","Framebuffer","resize"],"mappings":"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","sourcesContent":["import {createGLContext, resizeGLContext, resetParameters} from '../webgl-context';\nimport {pageLoadPromise} from '../webgl-context';\nimport {makeDebugContext} from '../webgl-context/debug-context';\nimport {isWebGL, requestAnimationFrame, cancelAnimationFrame} from '../webgl-utils';\nimport {log} from '../utils';\nimport assert from '../utils/assert';\n\n// TODO - remove dependency on webgl classes\nimport {Framebuffer} from '../webgl';\n\nconst DEFAULT_GL_OPTIONS = {\n  preserveDrawingBuffer: true\n};\n\nexport default class AnimationLoop {\n  /*\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\n   */\n  constructor(props = {}) {\n    const {\n      onCreateContext = opts => createGLContext(opts),\n      onAddHTML = null,\n      onInitialize = () => {},\n      onRender = () => {},\n      onFinalize = () => {},\n\n      offScreen = false,\n      gl = null,\n      glOptions = {},\n      debug = false,\n\n      createFramebuffer = false,\n\n      // view parameters\n      autoResizeViewport = true,\n      autoResizeDrawingBuffer = true\n    } = props;\n\n    let {\n      useDevicePixels = true\n    } = props;\n\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n\n    this.props = {\n      onCreateContext,\n      onAddHTML,\n      onInitialize,\n      onRender,\n      onFinalize,\n\n      gl,\n      glOptions,\n      debug,\n      createFramebuffer\n    };\n\n    // state\n    this.gl = gl;\n    this.offScreen = offScreen;\n    this.needsRedraw = null;\n\n    this.setProps({\n      autoResizeViewport,\n      autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n\n    // Bind methods\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this._renderFrame = this._renderFrame.bind(this);\n\n    return this;\n  }\n\n  setNeedsRedraw(reason) {\n    assert(typeof reason === 'string');\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n\n  setProps(props) {\n    if ('autoResizeViewport' in props) {\n      this.autoResizeViewport = props.autoResizeViewport;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n    }\n    if ('useDevicePixels' in props) {\n      this.useDevicePixels = props.useDevicePixels;\n    }\n    return this;\n  }\n\n  // Starts a render loop if not already running\n  // @param {Object} context - contains frame specific info (E.g. tick, width, height, etc)\n  start(opts = {}) {\n    this._stopped = false;\n    // console.debug(`Starting ${this.constructor.name}`);\n    if (!this._animationFrameId) {\n      // Wait for start promise before rendering frame\n      this._startPromise = pageLoadPromise\n      .then(() => {\n        if (this._stopped) {\n          return null;\n        }\n\n        // Create the WebGL context\n        this._createWebGLContext(opts);\n        this._createFramebuffer();\n\n        // Initialize the callback data\n        this._initializeCallbackData();\n        this._updateCallbackData();\n\n        // Default viewport setup, in case onInitialize wants to render\n        this._resizeCanvasDrawingBuffer();\n        this._resizeViewport();\n\n        // Note: onIntialize can return a promise (in case it needs to load resources)\n        return this.onInitialize(this.animationProps);\n      })\n      .then(appContext => {\n        if (!this._stopped) {\n          this._addCallbackData(appContext || {});\n          if (appContext !== false && !this._animationFrameId) {\n            this._animationFrameId = requestAnimationFrame(this._renderFrame);\n          }\n        }\n      });\n\n    }\n    return this;\n  }\n\n  // Stops a render loop if already running, finalizing\n  stop() {\n    // console.debug(`Stopping ${this.constructor.name}`);\n    if (this._animationFrameId) {\n      this._finalizeCallbackData();\n      cancelAnimationFrame(this._animationFrameId);\n      this._animationFrameId = null;\n      this._stopped = true;\n    }\n    return this;\n  }\n\n  onCreateContext(...args) {\n    return this.props.onCreateContext(...args);\n  }\n\n  onInitialize(...args) {\n    return this.props.onInitialize(...args);\n  }\n\n  onRender(...args) {\n    return this.props.onRender(...args);\n  }\n\n  onFinalize(...args) {\n    return this.props.onFinalize(...args);\n  }\n\n  // DEPRECATED/REMOVED METHODS\n\n  getHTMLControlValue(id, defaultValue = 1) {\n    const element = document.getElementById(id);\n    return element ? Number(element.value) : defaultValue;\n  }\n\n  // Update parameters\n  setViewParameters() {\n    log.removed('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _setupFrame() {\n    if (this._onSetupFrame) {\n      // call callback\n      this._onSetupFrame(this.animationProps);\n      // end callback\n    } else {\n      this._resizeCanvasDrawingBuffer();\n      this._resizeViewport();\n      this._resizeFramebuffer();\n    }\n  }\n\n  /**\n   * @private\n   * Handles a render loop frame - updates context and calls the application\n   * callback\n   */\n  _renderFrame() {\n    if (this._stopped) {\n      return;\n    }\n\n    this._setupFrame();\n    this._updateCallbackData();\n\n    // call callback\n    this.onRender(this.animationProps);\n    // end callback\n\n    if (this.offScreen) {\n      // commit returns a Promise\n      this.gl.commit().then(this._renderFrame);\n    } else {\n      // Request another render frame (now )\n      this._animationFrameId = requestAnimationFrame(this._renderFrame);\n    }\n  }\n\n  // Initialize the  object that will be passed to app callbacks\n  _initializeCallbackData() {\n    this.animationProps = {\n      gl: this.gl,\n\n      stop: this.stop,\n      canvas: this.gl.canvas,\n      framebuffer: this.framebuffer,\n\n      // Initial values\n      useDevicePixels: this.useDevicePixels,\n      needsRedraw: null,\n\n      // Animation props\n      startTime: Date.now(),\n      time: 0,\n      tick: 0,\n      tock: 0,\n      // canvas\n\n      // Experimental\n      _loop: this,\n      _animationLoop: this\n    };\n  }\n\n  // Update the context object that will be passed to app callbacks\n  _updateCallbackData() {\n    // Update redraw reason\n    this.animationProps.needsRedraw = this.needsRedraw;\n    this.needsRedraw = null;\n\n    // CallbackData width and height represent drawing buffer width and height\n    const width = this.gl.drawingBufferWidth;\n    const height = this.gl.drawingBufferHeight;\n    if (width !== this.animationProps.width || height !== this.animationProps.height) {\n      this.setNeedsRedraw('drawing buffer resized');\n    }\n\n    this.animationProps.width = width;\n    this.animationProps.height = height;\n    this.animationProps.aspect = height > 0 ? width / height : 1;\n    this.animationProps.needsRedraw = this.needsRedraw;\n\n    // Increment tick\n    this.animationProps.time = Date.now() - this.animationProps.startTime;\n    this.animationProps.tick++;\n    this.animationProps.tock = Math.floor(this.animationProps.time / 1000 * 60);\n\n    // experimental\n    this.animationProps._offScreen = this.offScreen;\n  }\n\n  _finalizeCallbackData() {\n    // call callback\n    this.onFinalize(this.animationProps);\n    // end callback\n  }\n\n  // Add application's data to the app context object\n  _addCallbackData(appContext) {\n    if (typeof appContext === 'object' && appContext !== null) {\n      this.animationProps = Object.assign({}, this.animationProps, appContext);\n    }\n  }\n\n  // Either uses supplied or existing context, or calls provided callback to create one\n  _createWebGLContext(opts) {\n    // Create the WebGL context if necessary\n    opts = Object.assign({}, opts, DEFAULT_GL_OPTIONS, this.props.glOptions);\n    this.gl = this.props.gl || this.onCreateContext(opts);\n\n    if (!isWebGL(this.gl)) {\n      throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n    }\n\n    if (this.props.debug) {\n      this.gl = makeDebugContext(this.gl);\n    }\n\n    // Reset the WebGL context.\n    resetParameters(this.gl);\n\n    this._createInfoDiv();\n  }\n\n  _createInfoDiv() {\n    if (this.gl.canvas && this.props.onAddHTML) {\n      /* global document */\n      const wrapperDiv = document.createElement('div');\n      document.body.appendChild(wrapperDiv);\n      wrapperDiv.style.position = 'relative';\n      const div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '10px';\n      div.style.bottom = '10px';\n      div.style.width = '300px';\n      div.style.background = 'white';\n      wrapperDiv.appendChild(this.gl.canvas);\n      wrapperDiv.appendChild(div);\n      const html = this.props.onAddHTML(div);\n      if (html) {\n        div.innerHTML = html;\n      }\n    }\n  }\n\n  // Default viewport setup\n  _resizeViewport() {\n    if (this.autoResizeViewport) {\n      this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    }\n  }\n\n  // Resize the render buffer of the canvas to match canvas client size\n  // Optionally multiplying with devicePixel ratio\n  _resizeCanvasDrawingBuffer() {\n    if (this.autoResizeDrawingBuffer) {\n      resizeGLContext(this.gl, {useDevicePixels: this.useDevicePixels});\n    }\n  }\n\n  // TBD - deprecated?\n  _createFramebuffer() {\n    // Setup default framebuffer\n    if (this.props.createFramebuffer) {\n      this.framebuffer = new Framebuffer(this.gl);\n    }\n  }\n\n  _resizeFramebuffer() {\n    if (this.framebuffer) {\n      this.framebuffer.resize({\n        width: this.gl.drawingBufferWidth,\n        height: this.gl.drawingBufferHeight\n      });\n    }\n  }\n}\n"],"file":"animation-loop.js"}