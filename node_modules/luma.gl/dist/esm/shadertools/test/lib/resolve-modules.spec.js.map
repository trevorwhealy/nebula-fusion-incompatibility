{"version":3,"sources":["../../../../../src/shadertools/test/lib/resolve-modules.spec.js"],"names":["test","resolveModules","TEST_EXPORTS","getDependencyGraph","fp32","name","fp64","project","dependencies","project64","t","ok","undefined","end","result","deepEqual","map","module","moduleDepth","modules","level","moduleMap"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,6CAA3C;IACOC,kB,GAAsBD,Y,CAAtBC,kB,EAEP;;AACA,IAAMC,OAAO;AACXC,QAAM;AADK,CAAb;AAIA,IAAMC,OAAO;AACXD,QAAM;AADK,CAAb;AAIA,IAAME,UAAU;AACdF,QAAM,cADQ;AAEdG,gBAAc,CAACJ,IAAD;AAFA,CAAhB;AAKA,IAAMK,YAAY;AAChBJ,QAAM,gBADU;AAEhBG,gBAAc,CAACD,OAAD,EAAUD,IAAV;AAFE,CAAlB;AAKAN,KAAK,sBAAL,EAA6B,aAAK;AAChCU,IAAEC,EAAF,CAAKV,mBAAmBW,SAAxB,EAAmC,kCAAnC;AACAF,IAAEC,EAAF,CAAKR,uBAAuBS,SAA5B,EAAuC,sCAAvC;AACAF,IAAEG,GAAF;AACD,CAJD;AAMAb,KAAK,qCAAL,EAA4C,aAAK;AAC/C,MAAMc,SAASb,eAAe,CAACQ,SAAD,EAAYF,OAAZ,CAAf,CAAf;AACAG,IAAEK,SAAF,CACED,OAAOE,GAAP,CAAW;AAAA,WAAUC,OAAOZ,IAAjB;AAAA,GAAX,CADF,EAEE,CAACD,KAAKC,IAAN,EAAYE,QAAQF,IAApB,EAA0BC,KAAKD,IAA/B,EAAqCI,UAAUJ,IAA/C,CAFF,EAGE,yBAHF;AAIAK,IAAEG,GAAF;AACD,CAPD;AASAb,KAAK,kCAAL,EAAyC,aAAK;AAAA;;AAC5C,MAAMkB,cAAc,EAApB;AACAf,qBAAmB;AACjBgB,aAAS,CAACV,SAAD,EAAYF,OAAZ,CADQ;AAEjBa,WAAO,CAFU;AAGjBC,eAAW,EAHM;AAIjBH;AAJiB,GAAnB;AAMAR,IAAEK,SAAF,CAAYG,WAAZ,oDACGd,KAAKC,IADR,EACe,CADf,iCAEGE,QAAQF,IAFX,EAEkB,CAFlB,iCAGGC,KAAKD,IAHR,EAGe,CAHf,iCAIGI,UAAUJ,IAJb,EAIoB,CAJpB,kBAKG,8BALH;AAMAK,IAAEG,GAAF;AACD,CAfD","sourcesContent":["import test from 'tape-catch';\nimport {resolveModules, TEST_EXPORTS} from 'luma.gl/shadertools/src/lib/resolve-modules';\nconst {getDependencyGraph} = TEST_EXPORTS;\n\n// Dummy shader modules with dependencies\nconst fp32 = {\n  name: 'fp32-test'\n};\n\nconst fp64 = {\n  name: 'fp64-test'\n};\n\nconst project = {\n  name: 'project-test',\n  dependencies: [fp32]\n};\n\nconst project64 = {\n  name: 'project64-test',\n  dependencies: [project, fp64]\n};\n\ntest('ShaderModules#import', t => {\n  t.ok(resolveModules !== undefined, 'resolveModules import successful');\n  t.ok(getDependencyGraph !== undefined, 'getDependencyGraph import successful');\n  t.end();\n});\n\ntest('ShaderModules#getShaderDependencies', t => {\n  const result = resolveModules([project64, project]);\n  t.deepEqual(\n    result.map(module => module.name),\n    [fp32.name, project.name, fp64.name, project64.name],\n    'Module order is correct');\n  t.end();\n});\n\ntest('ShaderModules#getDependencyGraph', t => {\n  const moduleDepth = {};\n  getDependencyGraph({\n    modules: [project64, project],\n    level: 0,\n    moduleMap: {},\n    moduleDepth\n  });\n  t.deepEqual(moduleDepth, {\n    [fp32.name]: 2,\n    [project.name]: 1,\n    [fp64.name]: 1,\n    [project64.name]: 0\n  }, 'Module dependecny is correct');\n  t.end();\n});\n"],"file":"resolve-modules.spec.js"}