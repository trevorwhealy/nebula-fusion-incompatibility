'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var fusionCore = require('fusion-core');
var reactHelmetAsync = require('react-helmet-async');
var reactHelmetAsync__default = _interopDefault(reactHelmetAsync);

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
const keys = ['meta', 'link', 'style', 'base', 'noscript', 'script'];
const plugin = true && fusionCore.createPlugin({
  middleware: () => {
    return async (ctx, next) => {
      if (!ctx.element) {
        return next();
      }

      const helmetContext = {};
      ctx.element = React.createElement(reactHelmetAsync.HelmetProvider, {
        context: helmetContext
      }, ctx.element);
      await next();
      const {
        helmet
      } = helmetContext;

      if (helmet) {
        ctx.template.title = helmet.title.toString().replace('</title>', '').replace(/^<title.*>/, '');
        keys.forEach(key => {
          ctx.template.head.push(fusionCore.dangerouslySetHTML(helmet[key].toString()));
        });
      }
    };
  }
});

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
var index = plugin;

exports.Helmet = reactHelmetAsync__default;
exports.default = index;
//# sourceMappingURL=index.js.map
